{
  "metadata": {
    "timestamp": "2025-07-06T09:37:34.196Z",
    "mode": "uncommitted",
    "totalFiles": 2,
    "totalThemes": 2,
    "processingTimeMs": 627578,
    "gitBranch": "0407-1-1",
    "gitCommit": "99af133f"
  },
  "themes": "Found 41 themes:\\n\\n1. **Clean up debug output** (90%)\\n   src/local-testing/services/output-saver.ts, src/mindmap/services/ai/ai-similarity.ts, src/mindmap/services/business-domain.ts (+3 more)\\n   Removes development logging and debug statements to provide a cleaner, more professional user experience\\n\\n   1.1. **Clean AI Analysis Debug Output** (80%)\\n      src/mindmap/services/ai/ai-similarity.ts, src/mindmap/services/theme-similarity.ts\\n      Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner produ...\\n\\n      1.1.1. **Clean AI Similarity Service Debug Output** (80%)\\n         src/mindmap/services/ai/ai-similarity.ts\\n         Removes debug logging from the core AI similarity analysis service. Eliminates response logging, batch processing debug output, and validation debug messages from Claude AI interactions to provide ...\\n\\n         1.1.1.1. **Remove AI Similarity Calculation Debug Logging** (80%)\\n            src/mindmap/services/ai/ai-similarity.ts\\n            Removes debug logging from the calculateAISimilarity method. Eliminates success/failure logging for individual theme comparisons and error handling debug output when AI analysis fails.\\n         1.1.1.2. **Remove AI Response Parsing Debug Logging** (80%)\\n            src/mindmap/services/ai/ai-similarity.ts\\n            Removes debug logging from the parseAISimilarityResponse method. Eliminates JSON extraction failure warnings and original response debug output when Claude API responses cannot be parsed.\\n         1.1.1.3. **Remove Batch Similarity Processing Debug Logging** (80%)\\n            src/mindmap/services/ai/ai-similarity.ts\\n            Removes debug logging from the calculateBatchSimilarity method. Eliminates batch processing progress logs, result count validation warnings, and success/failure debug output from batch API calls.\\n      1.1.2. **Clean Theme Similarity Service Debug Output** (80%)\\n         src/mindmap/services/theme-similarity.ts\\n         Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\\n\\n         1.1.2.1. **Remove Service Initialization Debug Logs** (80%)\\n            src/mindmap/services/theme-similarity.ts\\n            Removes debug logging from constructor and service initialization processes. Eliminates development-time logging that tracked service setup and configuration initialization.\\n         1.1.2.2. **Remove Batch Processing Progress Logs** (80%)\\n            src/mindmap/services/theme-similarity.ts\\n            Removes debug logging from batch similarity processing workflows. Eliminates progress tracking output and batch milestone logging from concurrent processing operations.\\n         1.1.2.3. **Remove Error Handling Debug Output** (80%)\\n            src/mindmap/services/theme-similarity.ts\\n            Removes debug logging from error handling and fallback processing. Eliminates debug output from batch failure scenarios and individual processing fallbacks.\\n\\n            1.1.2.3.1. **Remove Batch Processing Error Debug Output** (80%)\\n               src/mindmap/services/theme-similarity.ts\\n               Removes debug logging from batch processing error handlers in the ConcurrencyManager.processConcurrentlyWithLimit onError callback. This eliminates development-time error logging that tracked batch...\\n            1.1.2.3.2. **Remove Similarity Calculation Error Debug Output** (80%)\\n               src/mindmap/services/theme-similarity.ts\\n               Removes debug logging from similarity calculation error handling in the processSimilarityBatch try-catch block. This eliminates debug output that tracked AI service failures during batch similarity...\\n            1.1.2.3.3. **Remove Individual Processing Fallback Debug Output** (80%)\\n               src/mindmap/services/theme-similarity.ts\\n               Removes debug logging from individual processing fallback scenarios in the processBatchIndividually method. This eliminates debug output that tracked when individual theme pair processing failed an...\\n   1.2. **Clean Domain Classification Debug Output** (80%)\\n      src/mindmap/services/business-domain.ts\\n      Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classificatio...\\n\\n      1.2.1. **Clean Batch Processing Debug Output** (80%)\\n         src/mindmap/services/business-domain.ts\\n         Removes debug logging from concurrent batch processing operations. Eliminates progress tracking callbacks and error logging from the concurrency manager to streamline batch domain classification.\\n      1.2.2. **Clean AI Classification Debug Output** (80%)\\n         src/mindmap/services/business-domain.ts\\n         Removes debug logging from AI domain classification attempts. Eliminates stage logging and response output tracking from the multi-stage domain extraction process.\\n\\n         1.2.2.1. **Remove Batch Processing Debug Output** (80%)\\n            src/mindmap/services/business-domain.ts\\n            Removes debug logging from concurrent batch processing operations. Eliminates progress tracking callbacks and error logging from the concurrency manager to streamline batch domain classification.\\n         1.2.2.2. **Remove AI Stage Debug Output** (80%)\\n            src/mindmap/services/business-domain.ts\\n            Removes debug logging from the multi-stage AI domain extraction process. Eliminates stage progression logging and AI response tracking from the domain classification workflow.\\n         1.2.2.3. **Remove Confidence Level Debug Output** (80%)\\n            src/mindmap/services/business-domain.ts\\n            Removes debug logging from AI confidence assessment and domain classification results. Eliminates confidence threshold warnings and domain assignment output from the AI analysis process.\\n      1.2.3. **Clean Error Handling Debug Output** (80%)\\n         src/mindmap/services/business-domain.ts\\n         Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\\n\\n         1.2.3.1. **Clean Batch Processing Error Debug** (80%)\\n            src/mindmap/services/business-domain.ts\\n            Removes debug logging from batch processing error handling in concurrent domain classification. Eliminates error output from the ConcurrencyManager's onError callback and batch result error handlin...\\n\\n            1.2.3.1.1. **Clean Concurrency Manager Error Debug** (80%)\\n               src/mindmap/services/business-domain.ts\\n               Removes debug logging from ConcurrencyManager's onError callback in batch processing configuration. Eliminates error output from concurrent batch processing failures to provide cleaner concurrency ...\\n            1.2.3.1.2. **Clean AI Domain Classification Error Debug** (80%)\\n               src/mindmap/services/business-domain.ts\\n               Removes debug logging from AI domain classification error handling in extractBusinessDomainWithAI method. Eliminates error output from failed AI domain analysis to provide cleaner AI error handling.\\n            1.2.3.1.3. **Clean Batch Processing Error Debug** (80%)\\n               src/mindmap/services/business-domain.ts\\n               Removes debug logging from batch processing error handling in processDomainBatch method. Eliminates error output from failed batch processing to provide cleaner batch error handling.\\n         1.2.3.2. **Clean AI Call Error Debug** (80%)\\n            src/mindmap/services/business-domain.ts\\n            Removes debug logging from AI domain classification error handling. Eliminates error output from failed AI calls in extractBusinessDomainWithAI and processDomainBatch methods to provide cleaner AI ...\\n\\n            1.2.3.2.1. **Clean AI Classification Error Debug** (80%)\\n               src/mindmap/services/business-domain.ts\\n               Removes debug logging from the main AI domain classification method. Eliminates error output from extractBusinessDomainWithAI when AI calls fail, providing cleaner error handling for the core AI cl...\\n            1.2.3.2.2. **Clean Batch Processing Debug Output** (80%)\\n               src/mindmap/services/business-domain.ts\\n               Removes debug logging from batch processing operations. Eliminates console.log statements from batch progress reporting and batch result mapping to provide cleaner batch processing output.\\n            1.2.3.2.3. **Clean Individual Processing Error Debug** (80%)\\n               src/mindmap/services/business-domain.ts\\n               Removes debug logging from individual domain extraction fallback methods. Eliminates error output from tryDomainExtraction and processDomainBatchIndividually when individual processing fails.\\n         1.2.3.3. **Clean Fallback Error Debug** (80%)\\n            src/mindmap/services/business-domain.ts\\n            Removes debug logging from fallback mechanism error handling. Eliminates error output from individual domain processing failures and CLI command execution errors to provide cleaner fallback process...\\n   1.3. **Clean Output Management Debug Logs** (80%)\\n      src/local-testing/services/output-saver.ts, src/mindmap/services/theme-naming.ts, src/mindmap/services/theme-service.ts\\n      Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\\n\\n      1.3.1. **Clean File Management Debug Output** (80%)\\n         src/local-testing/services/output-saver.ts\\n         Removes save confirmations, file size logs, and deletion count messages from OutputSaver class. Eliminates development-time logging from file operations including save success notifications and cle...\\n      1.3.2. **Clean AI Theme Naming Debug Output** (80%)\\n         src/mindmap/services/theme-naming.ts\\n         Removes debug logging from theme naming service including generated theme notifications, validation warnings, and JSON extraction failure messages. Eliminates Claude AI interaction logging from the...\\n\\n         1.3.2.1. **Remove AI Theme Generation Logging** (80%)\\n            src/mindmap/services/theme-naming.ts\\n            Removes console.log notification when AI successfully generates merged theme names. Eliminates the '[AI-NAMING] Generated merged theme' debug message from Claude AI interactions.\\n         1.3.2.2. **Remove Theme Validation Debug Warnings** (80%)\\n            src/mindmap/services/theme-naming.ts\\n            Removes console.warn message when generated theme names fail validation checks. Eliminates the '[AI-NAMING] Generated name invalid, using fallback' warning from theme naming validation.\\n         1.3.2.3. **Remove JSON Extraction Error Logging** (80%)\\n            src/mindmap/services/theme-naming.ts\\n            Removes console.warn and console.debug messages when JSON extraction fails during theme name parsing. Eliminates '[THEME-NAMING] JSON extraction failed' and original response debug output.\\n      1.3.3. **Clean Theme Analysis Debug Output** (80%)\\n         src/mindmap/services/theme-service.ts\\n         Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme an...\\n\\n         1.3.3.1. **Clean Claude API Failure Debug Output** (80%)\\n            src/mindmap/services/theme-service.ts\\n            Removes console.warn logging when Claude API analysis fails and fallback analysis is used. Eliminates development-time error messages from Claude service interactions.\\n         1.3.3.2. **Clean JSON Extraction Failure Debug Output** (80%)\\n            src/mindmap/services/theme-service.ts\\n            Removes console.warn and console.debug logging when JSON extraction fails in Claude response parsing. Eliminates verbose error messages and response dumps from parseClaudeResponse method.\\n         1.3.3.3. **Clean Chunk Analysis Failure Debug Output** (80%)\\n            src/mindmap/services/theme-service.ts\\n            Removes console.warn logging when individual chunk analysis fails during batch processing. Eliminates per-file failure notifications from processBatchResults method.\\n         1.3.3.4. **Clean Overall Analysis Error Debug Output** (80%)\\n            src/mindmap/services/theme-service.ts\\n            Removes console.error logging when entire theme analysis pipeline fails. Eliminates top-level error logging from analyzeThemesWithEnhancedContext catch block.\\n2. **Deleted test output analysis file** (90%)\\n   test-output/analysis-2025-07-06T09-17-51-794Z.json\\n   Removed test-output/analysis-2025-07-06T09-17-51-794Z.json containing 2 code analysis themes Cleaned up temporary analysis output from code review process",
  "summary": "Analyzed code changes and identified 41 themes across 5 hierarchy levels. Root themes: 2, Average confidence: 80%. 40 themes expanded for detailed analysis. 1 themes consolidated from similar patterns.",
  "rawAnalysis": {
    "themes": [
      {
        "id": "merged-1751794411655-njayr8bja",
        "name": "Clean up debug output",
        "description": "Removes development logging and debug statements to provide a cleaner, more professional user experience",
        "level": 0,
        "childThemes": [
          {
            "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891",
            "name": "Clean AI Analysis Debug Output",
            "description": "Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.",
            "level": 1,
            "parentId": "merged-1751794411655-njayr8bja",
            "childThemes": [
              {
                "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0",
                "name": "Clean AI Similarity Service Debug Output",
                "description": "Removes debug logging from the core AI similarity analysis service. Eliminates response logging, batch processing debug output, and validation debug messages from Claude AI interactions to provide cleaner production output.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891",
                "childThemes": [
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0_sub_0_ce5dd772_0eca",
                    "name": "Remove AI Similarity Calculation Debug Logging",
                    "description": "Removes debug logging from the calculateAISimilarity method. Eliminates success/failure logging for individual theme comparisons and error handling debug output when AI analysis fails.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/ai/ai-similarity.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Individual similarity calculation logging is a separate concern from batch processing",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the core AI similarity analysis service. Eliminates response logging, batch processing debug output, and validation debug messages from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the calculateAISimilarity method. Eliminates success/failure logging for individual theme comparisons and error handling debug output when AI analysis fails.",
                    "lastAnalysis": "2025-07-06T09:35:02.542Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0_sub_1_4698ae23_57e4",
                    "name": "Remove AI Response Parsing Debug Logging",
                    "description": "Removes debug logging from the parseAISimilarityResponse method. Eliminates JSON extraction failure warnings and original response debug output when Claude API responses cannot be parsed.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/ai/ai-similarity.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Response parsing debug output is distinct from API call debugging",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the core AI similarity analysis service. Eliminates response logging, batch processing debug output, and validation debug messages from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the parseAISimilarityResponse method. Eliminates JSON extraction failure warnings and original response debug output when Claude API responses cannot be parsed.",
                    "lastAnalysis": "2025-07-06T09:35:02.542Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0_sub_2_970bae60_1633",
                    "name": "Remove Batch Similarity Processing Debug Logging",
                    "description": "Removes debug logging from the calculateBatchSimilarity method. Eliminates batch processing progress logs, result count validation warnings, and success/failure debug output from batch API calls.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/ai/ai-similarity.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Batch processing logging is a separate performance optimization concern",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the core AI similarity analysis service. Eliminates response logging, batch processing debug output, and validation debug messages from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the calculateBatchSimilarity method. Eliminates batch processing progress logs, result count validation warnings, and success/failure debug output from batch API calls.",
                    "lastAnalysis": "2025-07-06T09:35:02.542Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_0_54b92b36_33b0"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  }
                ],
                "affectedFiles": [
                  "src/mindmap/services/ai/ai-similarity.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "Single service with its own debug logging concerns",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the core AI similarity analysis service. Eliminates response logging, batch processing debug output, and validation debug messages from Claude AI interactions to provide cleaner production output.",
                "lastAnalysis": "2025-07-06T09:34:38.276Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false,
                "isExpanded": true
              },
              {
                "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c",
                "name": "Clean Theme Similarity Service Debug Output",
                "description": "Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891",
                "childThemes": [
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_0_94483593_f723",
                    "name": "Remove Service Initialization Debug Logs",
                    "description": "Removes debug logging from constructor and service initialization processes. Eliminates development-time logging that tracked service setup and configuration initialization.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-similarity.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Service initialization is a distinct concern from batch processing",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\n\nSub-theme: Removes debug logging from constructor and service initialization processes. Eliminates development-time logging that tracked service setup and configuration initialization.",
                    "lastAnalysis": "2025-07-06T09:35:01.204Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_1_d05d82f2_0c10",
                    "name": "Remove Batch Processing Progress Logs",
                    "description": "Removes debug logging from batch similarity processing workflows. Eliminates progress tracking output and batch milestone logging from concurrent processing operations.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-similarity.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Batch processing progress is separate from error handling",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\n\nSub-theme: Removes debug logging from batch similarity processing workflows. Eliminates progress tracking output and batch milestone logging from concurrent processing operations.",
                    "lastAnalysis": "2025-07-06T09:35:01.204Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1",
                    "name": "Remove Error Handling Debug Output",
                    "description": "Removes debug logging from error handling and fallback processing. Eliminates debug output from batch failure scenarios and individual processing fallbacks.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c",
                    "childThemes": [
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1_sub_0_5b50f279_cfdc",
                        "name": "Remove Batch Processing Error Debug Output",
                        "description": "Removes debug logging from batch processing error handlers in the ConcurrencyManager.processConcurrentlyWithLimit onError callback. This eliminates development-time error logging that tracked batch processing failures during concurrent theme similarity analysis.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/theme-similarity.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Batch processing errors are a distinct concern from individual similarity calculation errors",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\n\nSub-theme: Removes debug logging from error handling and fallback processing. Eliminates debug output from batch failure scenarios and individual processing fallbacks.\n\nSub-theme: Removes debug logging from batch processing error handlers in the ConcurrencyManager.processConcurrentlyWithLimit onError callback. This eliminates development-time error logging that tracked batch processing failures during concurrent theme similarity analysis.",
                        "lastAnalysis": "2025-07-06T09:35:46.997Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      },
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1_sub_1_7d876e75_59be",
                        "name": "Remove Similarity Calculation Error Debug Output",
                        "description": "Removes debug logging from similarity calculation error handling in the processSimilarityBatch try-catch block. This eliminates debug output that tracked AI service failures during batch similarity processing.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/theme-similarity.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "AI service error handling is separate from individual fallback processing",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\n\nSub-theme: Removes debug logging from error handling and fallback processing. Eliminates debug output from batch failure scenarios and individual processing fallbacks.\n\nSub-theme: Removes debug logging from similarity calculation error handling in the processSimilarityBatch try-catch block. This eliminates debug output that tracked AI service failures during batch similarity processing.",
                        "lastAnalysis": "2025-07-06T09:35:46.997Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      },
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1_sub_2_2508d832_4754",
                        "name": "Remove Individual Processing Fallback Debug Output",
                        "description": "Removes debug logging from individual processing fallback scenarios in the processBatchIndividually method. This eliminates debug output that tracked when individual theme pair processing failed and fell back to default similarity metrics.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/theme-similarity.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Individual processing fallbacks have different error recovery than batch processing",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\n\nSub-theme: Removes debug logging from error handling and fallback processing. Eliminates debug output from batch failure scenarios and individual processing fallbacks.\n\nSub-theme: Removes debug logging from individual processing fallback scenarios in the processBatchIndividually method. This eliminates debug output that tracked when individual theme pair processing failed and fell back to default similarity metrics.",
                        "lastAnalysis": "2025-07-06T09:35:46.997Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c_sub_2_f34290ff_00a1"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      }
                    ],
                    "affectedFiles": [
                      "src/mindmap/services/theme-similarity.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Error handling logging is distinct from normal processing flow",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.\n\nSub-theme: Removes debug logging from error handling and fallback processing. Eliminates debug output from batch failure scenarios and individual processing fallbacks.",
                    "lastAnalysis": "2025-07-06T09:35:01.204Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891_sub_1_51858a66_3e9c"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false,
                    "isExpanded": true
                  }
                ],
                "affectedFiles": [
                  "src/mindmap/services/theme-similarity.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "Separate orchestration service with distinct debug concerns",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.\n\nSub-theme: Removes debug logging from the theme similarity orchestration service. Eliminates initialization logging, batch progress tracking, and error handling debug output from the theme consolidation process.",
                "lastAnalysis": "2025-07-06T09:34:38.276Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_0_b0e9e68b_3891"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false,
                "isExpanded": true
              }
            ],
            "affectedFiles": [
              "src/mindmap/services/ai/ai-similarity.ts",
              "src/mindmap/services/theme-similarity.ts"
            ],
            "confidence": 0.8,
            "businessImpact": "AI analysis logging is a separate concern from other services",
            "codeSnippets": [
              "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n",
              "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
            ],
            "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from AI similarity analysis and batch processing services. Eliminates development-time console output and response logging from Claude AI interactions to provide cleaner production output.",
            "lastAnalysis": "2025-07-06T09:34:10.032Z",
            "sourceThemes": [
              "merged-1751794411655-njayr8bja"
            ],
            "consolidationMethod": "expansion",
            "isAtomic": false,
            "isExpanded": true
          },
          {
            "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21",
            "name": "Clean Domain Classification Debug Output",
            "description": "Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.",
            "level": 1,
            "parentId": "merged-1751794411655-njayr8bja",
            "childThemes": [
              {
                "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_0_9f4a28e5_1cc2",
                "name": "Clean Batch Processing Debug Output",
                "description": "Removes debug logging from concurrent batch processing operations. Eliminates progress tracking callbacks and error logging from the concurrency manager to streamline batch domain classification.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21",
                "childThemes": [],
                "affectedFiles": [
                  "src/mindmap/services/business-domain.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "Batch processing debug output is separate from AI classification logging",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from concurrent batch processing operations. Eliminates progress tracking callbacks and error logging from the concurrency manager to streamline batch domain classification.",
                "lastAnalysis": "2025-07-06T09:34:41.271Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false
              },
              {
                "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d",
                "name": "Clean AI Classification Debug Output",
                "description": "Removes debug logging from AI domain classification attempts. Eliminates stage logging and response output tracking from the multi-stage domain extraction process.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21",
                "childThemes": [
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d_sub_0_6331c5c8_748e",
                    "name": "Remove Batch Processing Debug Output",
                    "description": "Removes debug logging from concurrent batch processing operations. Eliminates progress tracking callbacks and error logging from the concurrency manager to streamline batch domain classification.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/business-domain.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Batch processing debug output is a distinct concern from AI classification stages",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from AI domain classification attempts. Eliminates stage logging and response output tracking from the multi-stage domain extraction process.\n\nSub-theme: Removes debug logging from concurrent batch processing operations. Eliminates progress tracking callbacks and error logging from the concurrency manager to streamline batch domain classification.",
                    "lastAnalysis": "2025-07-06T09:35:14.430Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d_sub_1_e0f0aaaf_2150",
                    "name": "Remove AI Stage Debug Output",
                    "description": "Removes debug logging from the multi-stage AI domain extraction process. Eliminates stage progression logging and AI response tracking from the domain classification workflow.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/business-domain.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "AI stage debugging is separate from batch processing and error handling",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from AI domain classification attempts. Eliminates stage logging and response output tracking from the multi-stage domain extraction process.\n\nSub-theme: Removes debug logging from the multi-stage AI domain extraction process. Eliminates stage progression logging and AI response tracking from the domain classification workflow.",
                    "lastAnalysis": "2025-07-06T09:35:14.430Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d_sub_2_1f4370ed_a530",
                    "name": "Remove Confidence Level Debug Output",
                    "description": "Removes debug logging from AI confidence assessment and domain classification results. Eliminates confidence threshold warnings and domain assignment output from the AI analysis process.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/business-domain.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Confidence level debugging represents a distinct AI quality assessment concern",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from AI domain classification attempts. Eliminates stage logging and response output tracking from the multi-stage domain extraction process.\n\nSub-theme: Removes debug logging from AI confidence assessment and domain classification results. Eliminates confidence threshold warnings and domain assignment output from the AI analysis process.",
                    "lastAnalysis": "2025-07-06T09:35:14.430Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_1_31ac4fd0_917d"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  }
                ],
                "affectedFiles": [
                  "src/mindmap/services/business-domain.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "AI classification debug output is distinct from error handling and batch processing",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from AI domain classification attempts. Eliminates stage logging and response output tracking from the multi-stage domain extraction process.",
                "lastAnalysis": "2025-07-06T09:34:41.271Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false,
                "isExpanded": true
              },
              {
                "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b",
                "name": "Clean Error Handling Debug Output",
                "description": "Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21",
                "childThemes": [
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7",
                    "name": "Clean Batch Processing Error Debug",
                    "description": "Removes debug logging from batch processing error handling in concurrent domain classification. Eliminates error output from the ConcurrencyManager's onError callback and batch result error handling to provide cleaner batch processing failures.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b",
                    "childThemes": [
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7_sub_0_6c1b5d03_72e6",
                        "name": "Clean Concurrency Manager Error Debug",
                        "description": "Removes debug logging from ConcurrencyManager's onError callback in batch processing configuration. Eliminates error output from concurrent batch processing failures to provide cleaner concurrency error handling.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/business-domain.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Concurrency error handling is separate from AI processing errors",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from batch processing error handling in concurrent domain classification. Eliminates error output from the ConcurrencyManager's onError callback and batch result error handling to provide cleaner batch processing failures.\n\nSub-theme: Removes debug logging from ConcurrencyManager's onError callback in batch processing configuration. Eliminates error output from concurrent batch processing failures to provide cleaner concurrency error handling.",
                        "lastAnalysis": "2025-07-06T09:36:07.907Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      },
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7_sub_1_d89b2f26_b383",
                        "name": "Clean AI Domain Classification Error Debug",
                        "description": "Removes debug logging from AI domain classification error handling in extractBusinessDomainWithAI method. Eliminates error output from failed AI domain analysis to provide cleaner AI error handling.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/business-domain.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "AI domain classification errors are distinct from batch processing errors",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from batch processing error handling in concurrent domain classification. Eliminates error output from the ConcurrencyManager's onError callback and batch result error handling to provide cleaner batch processing failures.\n\nSub-theme: Removes debug logging from AI domain classification error handling in extractBusinessDomainWithAI method. Eliminates error output from failed AI domain analysis to provide cleaner AI error handling.",
                        "lastAnalysis": "2025-07-06T09:36:07.907Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      },
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7_sub_2_994e6df2_1517",
                        "name": "Clean Batch Processing Error Debug",
                        "description": "Removes debug logging from batch processing error handling in processDomainBatch method. Eliminates error output from failed batch processing to provide cleaner batch error handling.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/business-domain.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Batch processing errors are separate from concurrency and AI errors",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from batch processing error handling in concurrent domain classification. Eliminates error output from the ConcurrencyManager's onError callback and batch result error handling to provide cleaner batch processing failures.\n\nSub-theme: Removes debug logging from batch processing error handling in processDomainBatch method. Eliminates error output from failed batch processing to provide cleaner batch error handling.",
                        "lastAnalysis": "2025-07-06T09:36:07.907Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_0_affe96b3_50d7"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      }
                    ],
                    "affectedFiles": [
                      "src/mindmap/services/business-domain.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Batch processing errors (lines 40-41, 53-55) have distinct handling logic from AI call errors",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from batch processing error handling in concurrent domain classification. Eliminates error output from the ConcurrencyManager's onError callback and batch result error handling to provide cleaner batch processing failures.",
                    "lastAnalysis": "2025-07-06T09:35:15.315Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false,
                    "isExpanded": true
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2",
                    "name": "Clean AI Call Error Debug",
                    "description": "Removes debug logging from AI domain classification error handling. Eliminates error output from failed AI calls in extractBusinessDomainWithAI and processDomainBatch methods to provide cleaner AI failure handling.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b",
                    "childThemes": [
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2_sub_0_32fce961_63b4",
                        "name": "Clean AI Classification Error Debug",
                        "description": "Removes debug logging from the main AI domain classification method. Eliminates error output from extractBusinessDomainWithAI when AI calls fail, providing cleaner error handling for the core AI classification functionality.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/business-domain.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Core AI classification has distinct error handling from batch processing",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from AI domain classification error handling. Eliminates error output from failed AI calls in extractBusinessDomainWithAI and processDomainBatch methods to provide cleaner AI failure handling.\n\nSub-theme: Removes debug logging from the main AI domain classification method. Eliminates error output from extractBusinessDomainWithAI when AI calls fail, providing cleaner error handling for the core AI classification functionality.",
                        "lastAnalysis": "2025-07-06T09:36:17.899Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      },
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2_sub_1_6b9d6657_814d",
                        "name": "Clean Batch Processing Debug Output",
                        "description": "Removes debug logging from batch processing operations. Eliminates console.log statements from batch progress reporting and batch result mapping to provide cleaner batch processing output.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/business-domain.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Batch processing logging is separate from error handling concerns",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from AI domain classification error handling. Eliminates error output from failed AI calls in extractBusinessDomainWithAI and processDomainBatch methods to provide cleaner AI failure handling.\n\nSub-theme: Removes debug logging from batch processing operations. Eliminates console.log statements from batch progress reporting and batch result mapping to provide cleaner batch processing output.",
                        "lastAnalysis": "2025-07-06T09:36:17.899Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      },
                      {
                        "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2_sub_2_91ae7157_8a07",
                        "name": "Clean Individual Processing Error Debug",
                        "description": "Removes debug logging from individual domain extraction fallback methods. Eliminates error output from tryDomainExtraction and processDomainBatchIndividually when individual processing fails.",
                        "level": 4,
                        "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2",
                        "childThemes": [],
                        "affectedFiles": [
                          "src/mindmap/services/business-domain.ts"
                        ],
                        "confidence": 0.8,
                        "businessImpact": "Individual processing errors are distinct from batch processing failures",
                        "codeSnippets": [
                          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                        ],
                        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from AI domain classification error handling. Eliminates error output from failed AI calls in extractBusinessDomainWithAI and processDomainBatch methods to provide cleaner AI failure handling.\n\nSub-theme: Removes debug logging from individual domain extraction fallback methods. Eliminates error output from tryDomainExtraction and processDomainBatchIndividually when individual processing fails.",
                        "lastAnalysis": "2025-07-06T09:36:17.899Z",
                        "sourceThemes": [
                          "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_1_7f602131_a2d2"
                        ],
                        "consolidationMethod": "expansion",
                        "isAtomic": false
                      }
                    ],
                    "affectedFiles": [
                      "src/mindmap/services/business-domain.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "AI-specific error handling (lines 101-102, 522-523) has different fallback logic than other errors",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from AI domain classification error handling. Eliminates error output from failed AI calls in extractBusinessDomainWithAI and processDomainBatch methods to provide cleaner AI failure handling.",
                    "lastAnalysis": "2025-07-06T09:35:15.315Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false,
                    "isExpanded": true
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b_sub_2_3fc8b73e_d0a4",
                    "name": "Clean Fallback Error Debug",
                    "description": "Removes debug logging from fallback mechanism error handling. Eliminates error output from individual domain processing failures and CLI command execution errors to provide cleaner fallback processing.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/business-domain.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Fallback error handling (lines 268-269, 541-542) serves as last resort with different semantics",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.\n\nSub-theme: Removes debug logging from fallback mechanism error handling. Eliminates error output from individual domain processing failures and CLI command execution errors to provide cleaner fallback processing.",
                    "lastAnalysis": "2025-07-06T09:35:15.315Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21_sub_2_794ac140_3f9b"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  }
                ],
                "affectedFiles": [
                  "src/mindmap/services/business-domain.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "Error handling debug output is separate from normal processing flow",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.\n\nSub-theme: Removes debug logging from error handling and fallback mechanisms. Eliminates error output from failed AI calls and batch processing errors to provide cleaner error handling.",
                "lastAnalysis": "2025-07-06T09:34:41.271Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_1_276ea25f_cd21"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false,
                "isExpanded": true
              }
            ],
            "affectedFiles": [
              "src/mindmap/services/business-domain.ts"
            ],
            "confidence": 0.8,
            "businessImpact": "Domain classification has distinct debugging patterns from AI analysis",
            "codeSnippets": [
              "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
            ],
            "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from business domain extraction and classification services. Eliminates stage logging, progress tracking, and error output from domain analysis to streamline the classification process.",
            "lastAnalysis": "2025-07-06T09:34:10.032Z",
            "sourceThemes": [
              "merged-1751794411655-njayr8bja"
            ],
            "consolidationMethod": "expansion",
            "isAtomic": false,
            "isExpanded": true
          },
          {
            "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf",
            "name": "Clean Output Management Debug Logs",
            "description": "Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.",
            "level": 1,
            "parentId": "merged-1751794411655-njayr8bja",
            "childThemes": [
              {
                "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_0_db58e8ef_ceac",
                "name": "Clean File Management Debug Output",
                "description": "Removes save confirmations, file size logs, and deletion count messages from OutputSaver class. Eliminates development-time logging from file operations including save success notifications and cleanup status reports.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf",
                "childThemes": [],
                "affectedFiles": [
                  "src/local-testing/services/output-saver.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "File management logging is distinct from AI service logging concerns",
                "codeSnippets": [
                  "diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\nindex 75f0985..6c8ddc5 100644\n--- a/src/local-testing/services/output-saver.ts\n+++ b/src/local-testing/services/output-saver.ts\n@@ -63,8 +63,6 @@ export class OutputSaver {\n     const jsonContent = JSON.stringify(savedAnalysis, null, 2);\n     fs.writeFileSync(filepath, jsonContent, 'utf8');\n \n-    console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\n-    console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\n     \n \n     return filepath;\n@@ -98,7 +96,6 @@ export class OutputSaver {\n       const content = fs.readFileSync(filepath, 'utf8');\n       return JSON.parse(content) as SavedAnalysis;\n     } catch (error) {\n-      console.error(`[OUTPUT-SAVER] Failed to load analysis ${filename}:`, error);\n       return null;\n     }\n   }\n@@ -122,13 +119,9 @@ export class OutputSaver {\n         fs.unlinkSync(filepath);\n         deletedCount++;\n       } catch (error) {\n-        console.warn(`[OUTPUT-SAVER] Failed to delete ${filename}:`, error);\n       }\n     }\n \n-    if (deletedCount > 0) {\n-      console.log(`[OUTPUT-SAVER] Cleaned up ${deletedCount} old analysis files`);\n-    }\n   }\n \n   /**\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes save confirmations, file size logs, and deletion count messages from OutputSaver class. Eliminates development-time logging from file operations including save success notifications and cleanup status reports.",
                "lastAnalysis": "2025-07-06T09:34:51.238Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false
              },
              {
                "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4",
                "name": "Clean AI Theme Naming Debug Output",
                "description": "Removes debug logging from theme naming service including generated theme notifications, validation warnings, and JSON extraction failure messages. Eliminates Claude AI interaction logging from theme naming operations.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf",
                "childThemes": [
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4_sub_0_1836e2cd_59fa",
                    "name": "Remove AI Theme Generation Logging",
                    "description": "Removes console.log notification when AI successfully generates merged theme names. Eliminates the '[AI-NAMING] Generated merged theme' debug message from Claude AI interactions.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-naming.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "AI success logging is separate concern from validation/error logging",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme naming service including generated theme notifications, validation warnings, and JSON extraction failure messages. Eliminates Claude AI interaction logging from theme naming operations.\n\nSub-theme: Removes console.log notification when AI successfully generates merged theme names. Eliminates the '[AI-NAMING] Generated merged theme' debug message from Claude AI interactions.",
                    "lastAnalysis": "2025-07-06T09:35:28.060Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4_sub_1_519b828f_7648",
                    "name": "Remove Theme Validation Debug Warnings",
                    "description": "Removes console.warn message when generated theme names fail validation checks. Eliminates the '[AI-NAMING] Generated name invalid, using fallback' warning from theme naming validation.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-naming.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Validation warnings are separate from AI operation and JSON parsing concerns",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme naming service including generated theme notifications, validation warnings, and JSON extraction failure messages. Eliminates Claude AI interaction logging from theme naming operations.\n\nSub-theme: Removes console.warn message when generated theme names fail validation checks. Eliminates the '[AI-NAMING] Generated name invalid, using fallback' warning from theme naming validation.",
                    "lastAnalysis": "2025-07-06T09:35:28.060Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4_sub_2_a5f5de0b_bb65",
                    "name": "Remove JSON Extraction Error Logging",
                    "description": "Removes console.warn and console.debug messages when JSON extraction fails during theme name parsing. Eliminates '[THEME-NAMING] JSON extraction failed' and original response debug output.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-naming.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "JSON parsing error logging is distinct from AI generation and validation logging",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme naming service including generated theme notifications, validation warnings, and JSON extraction failure messages. Eliminates Claude AI interaction logging from theme naming operations.\n\nSub-theme: Removes console.warn and console.debug messages when JSON extraction fails during theme name parsing. Eliminates '[THEME-NAMING] JSON extraction failed' and original response debug output.",
                    "lastAnalysis": "2025-07-06T09:35:28.060Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_1_1a4a8a12_fcd4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  }
                ],
                "affectedFiles": [
                  "src/mindmap/services/theme-naming.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "AI theme naming logging has different error handling and validation concerns",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme naming service including generated theme notifications, validation warnings, and JSON extraction failure messages. Eliminates Claude AI interaction logging from theme naming operations.",
                "lastAnalysis": "2025-07-06T09:34:51.238Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false,
                "isExpanded": true
              },
              {
                "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4",
                "name": "Clean Theme Analysis Debug Output",
                "description": "Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme analysis operations.",
                "level": 2,
                "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf",
                "childThemes": [
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4_sub_0_3dc512c9_b4ed",
                    "name": "Clean Claude API Failure Debug Output",
                    "description": "Removes console.warn logging when Claude API analysis fails and fallback analysis is used. Eliminates development-time error messages from Claude service interactions.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-service.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "API failure handling is separate concern from JSON parsing",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme analysis operations.\n\nSub-theme: Removes console.warn logging when Claude API analysis fails and fallback analysis is used. Eliminates development-time error messages from Claude service interactions.",
                    "lastAnalysis": "2025-07-06T09:35:40.092Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4_sub_1_05436458_5d9e",
                    "name": "Clean JSON Extraction Failure Debug Output",
                    "description": "Removes console.warn and console.debug logging when JSON extraction fails in Claude response parsing. Eliminates verbose error messages and response dumps from parseClaudeResponse method.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-service.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "JSON extraction errors are distinct from API failures",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme analysis operations.\n\nSub-theme: Removes console.warn and console.debug logging when JSON extraction fails in Claude response parsing. Eliminates verbose error messages and response dumps from parseClaudeResponse method.",
                    "lastAnalysis": "2025-07-06T09:35:40.092Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4_sub_2_6c18d2b7_f873",
                    "name": "Clean Chunk Analysis Failure Debug Output",
                    "description": "Removes console.warn logging when individual chunk analysis fails during batch processing. Eliminates per-file failure notifications from processBatchResults method.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-service.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Batch processing errors are separate from individual API calls",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme analysis operations.\n\nSub-theme: Removes console.warn logging when individual chunk analysis fails during batch processing. Eliminates per-file failure notifications from processBatchResults method.",
                    "lastAnalysis": "2025-07-06T09:35:40.092Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  },
                  {
                    "id": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4_sub_3_571ed0d3_8244",
                    "name": "Clean Overall Analysis Error Debug Output",
                    "description": "Removes console.error logging when entire theme analysis pipeline fails. Eliminates top-level error logging from analyzeThemesWithEnhancedContext catch block.",
                    "level": 3,
                    "parentId": "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4",
                    "childThemes": [],
                    "affectedFiles": [
                      "src/mindmap/services/theme-service.ts"
                    ],
                    "confidence": 0.8,
                    "businessImpact": "Pipeline-level errors are distinct from component-level failures",
                    "codeSnippets": [
                      "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
                    ],
                    "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme analysis operations.\n\nSub-theme: Removes console.error logging when entire theme analysis pipeline fails. Eliminates top-level error logging from analyzeThemesWithEnhancedContext catch block.",
                    "lastAnalysis": "2025-07-06T09:35:40.092Z",
                    "sourceThemes": [
                      "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf_sub_2_3ef868eb_a9e4"
                    ],
                    "consolidationMethod": "expansion",
                    "isAtomic": false
                  }
                ],
                "affectedFiles": [
                  "src/mindmap/services/theme-service.ts"
                ],
                "confidence": 0.8,
                "businessImpact": "Theme analysis logging covers different error scenarios and processing stages",
                "codeSnippets": [
                  "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
                ],
                "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.\n\nSub-theme: Removes debug logging from theme analysis service including Claude API failures, JSON extraction errors, and chunk processing warnings. Eliminates development-time console output from core theme analysis operations.",
                "lastAnalysis": "2025-07-06T09:34:51.238Z",
                "sourceThemes": [
                  "merged-1751794411655-njayr8bja_sub_2_fce899c9_56bf"
                ],
                "consolidationMethod": "expansion",
                "isAtomic": false,
                "isExpanded": true
              }
            ],
            "affectedFiles": [
              "src/local-testing/services/output-saver.ts",
              "src/mindmap/services/theme-naming.ts",
              "src/mindmap/services/theme-service.ts"
            ],
            "confidence": 0.8,
            "businessImpact": "File operations and theme processing have different debugging needs than AI services",
            "codeSnippets": [
              "diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\nindex 75f0985..6c8ddc5 100644\n--- a/src/local-testing/services/output-saver.ts\n+++ b/src/local-testing/services/output-saver.ts\n@@ -63,8 +63,6 @@ export class OutputSaver {\n     const jsonContent = JSON.stringify(savedAnalysis, null, 2);\n     fs.writeFileSync(filepath, jsonContent, 'utf8');\n \n-    console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\n-    console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\n     \n \n     return filepath;\n@@ -98,7 +96,6 @@ export class OutputSaver {\n       const content = fs.readFileSync(filepath, 'utf8');\n       return JSON.parse(content) as SavedAnalysis;\n     } catch (error) {\n-      console.error(`[OUTPUT-SAVER] Failed to load analysis ${filename}:`, error);\n       return null;\n     }\n   }\n@@ -122,13 +119,9 @@ export class OutputSaver {\n         fs.unlinkSync(filepath);\n         deletedCount++;\n       } catch (error) {\n-        console.warn(`[OUTPUT-SAVER] Failed to delete ${filename}:`, error);\n       }\n     }\n \n-    if (deletedCount > 0) {\n-      console.log(`[OUTPUT-SAVER] Cleaned up ${deletedCount} old analysis files`);\n-    }\n   }\n \n   /**\n",
              "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n",
              "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
            ],
            "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts\n\nSub-theme: Removes debug logging from file output management and theme processing services. Eliminates save confirmations, deletion counts, and processing status logs to provide cleaner file operations.",
            "lastAnalysis": "2025-07-06T09:34:10.032Z",
            "sourceThemes": [
              "merged-1751794411655-njayr8bja"
            ],
            "consolidationMethod": "expansion",
            "isAtomic": false,
            "isExpanded": true
          }
        ],
        "affectedFiles": [
          "src/local-testing/services/output-saver.ts",
          "src/mindmap/services/ai/ai-similarity.ts",
          "src/mindmap/services/business-domain.ts",
          "src/mindmap/services/theme-naming.ts",
          "src/mindmap/services/theme-service.ts",
          "src/mindmap/services/theme-similarity.ts"
        ],
        "confidence": 0.9,
        "businessImpact": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods; Removed all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService; Removed all console.log and console.warn statements from BusinessDomainService methods; Removed 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method; Removed console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService; Removed all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts",
        "codeSnippets": [
          "diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\nindex 75f0985..6c8ddc5 100644\n--- a/src/local-testing/services/output-saver.ts\n+++ b/src/local-testing/services/output-saver.ts\n@@ -63,8 +63,6 @@ export class OutputSaver {\n     const jsonContent = JSON.stringify(savedAnalysis, null, 2);\n     fs.writeFileSync(filepath, jsonContent, 'utf8');\n \n-    console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\n-    console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\n     \n \n     return filepath;\n@@ -98,7 +96,6 @@ export class OutputSaver {\n       const content = fs.readFileSync(filepath, 'utf8');\n       return JSON.parse(content) as SavedAnalysis;\n     } catch (error) {\n-      console.error(`[OUTPUT-SAVER] Failed to load analysis ${filename}:`, error);\n       return null;\n     }\n   }\n@@ -122,13 +119,9 @@ export class OutputSaver {\n         fs.unlinkSync(filepath);\n         deletedCount++;\n       } catch (error) {\n-        console.warn(`[OUTPUT-SAVER] Failed to delete ${filename}:`, error);\n       }\n     }\n \n-    if (deletedCount > 0) {\n-      console.log(`[OUTPUT-SAVER] Cleaned up ${deletedCount} old analysis files`);\n-    }\n   }\n \n   /**\n",
          "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n",
          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n",
          "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n",
          "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n",
          "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
        ],
        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods\nRemoved all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService\nRemoved all console.log and console.warn statements from BusinessDomainService methods\nRemoved 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method\nRemoved console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService\nRemoved all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts",
        "lastAnalysis": "2025-07-06T09:33:31.655Z",
        "sourceThemes": [
          "theme-7629764b-944b-48e7-849f-fa0de698a6b7",
          "theme-f06cb027-4790-4398-824f-cc5dab9641c5",
          "theme-4e6b0eb6-3852-415d-931d-cc69424d8bf0",
          "theme-f156f35b-0531-4a94-a562-1cffed690a2d",
          "theme-21c7150c-7131-4c8c-8f4e-2bc48657e790",
          "theme-c889aac6-c74e-4cb2-b0b4-eb978d95aa6a"
        ],
        "consolidationMethod": "merge",
        "consolidationSummary": "Merged 6 similar themes",
        "combinedTechnicalDetails": "Deleted console logging statements from OutputSaver class. Deleted 8 logging statements across 3 methods in AISimilarityService. Deleted debug logging from all BusinessDomainService methods. Deleted console.log, console.warn, and console.debug statements. Deleted 4 console logging statements across 3 classes. Deleted debugging output from ThemeSimilarityService methods",
        "keyChanges": [
          "Removed save confirmation console.log statements",
          "Removed error logging in loadAnalysis",
          "Removed cleanup status console.log",
          "Removed logger.debug calls in checkSimilarity method",
          "Removed console.warn/debug calls in parseAISimilarityResponse method",
          "Removed console.log/error calls in processBatchSimilarity method",
          "Removed batch processing progress logs",
          "Removed AI classification confidence warnings",
          "Removed domain extraction result logging",
          "Removed success theme generation logging",
          "Removed invalid name fallback warning",
          "Removed JSON extraction failure logging",
          "Removed Claude analysis failure warning log",
          "Removed JSON extraction error logging",
          "Removed theme analysis error logging",
          "Removed constructor config logging",
          "Deleted batch processing progress logs",
          "Removed similarity calculation trace messages"
        ],
        "mainFunctionsChanged": [
          "saveAnalysis",
          "loadAnalysis",
          "cleanupOldFiles",
          "checkSimilarity",
          "parseAISimilarityResponse",
          "processBatchSimilarity",
          "extractBusinessDomains",
          "extractBusinessDomainWithAI",
          "extractBusinessDomainFallback",
          "tryDomainExtraction",
          "parseDomainExtractionResponse",
          "processDomainBatch",
          "processDomainBatchIndividually",
          "generateMergedThemeName",
          "analyzeChunk",
          "processAnalysisResults",
          "analyzeThemes",
          "calculateSimilarity",
          "consolidateThemes",
          "findMergeGroups",
          "calculateBatchSimilarities",
          "buildHierarchies",
          "processSimilarityBatch",
          "parseBatchSimilarityResponse",
          "processBatchIndividually"
        ],
        "mainClassesChanged": [
          "OutputSaver",
          "AISimilarityService",
          "BusinessDomainService",
          "ThemeNamingService",
          "ClaudeService",
          "ThemeContextManager",
          "ThemeService",
          "ThemeSimilarityService"
        ],
        "codeMetrics": {
          "filesChanged": 6
        },
        "isAtomic": false,
        "isExpanded": true
      },
      {
        "id": "theme-c08d2a95-a4b5-40d8-a7e1-9fc6e70b125b",
        "name": "Deleted test output analysis file",
        "description": "Removed test-output/analysis-2025-07-06T09-17-51-794Z.json containing 2 code analysis themes",
        "level": 0,
        "childThemes": [],
        "affectedFiles": [
          "test-output/analysis-2025-07-06T09-17-51-794Z.json"
        ],
        "confidence": 0.9,
        "businessImpact": "Removed test-output/analysis-2025-07-06T09-17-51-794Z.json containing 2 code analysis themes",
        "codeSnippets": [
          "diff --git a/test-output/analysis-2025-07-06T09-17-51-794Z.json b/test-output/analysis-2025-07-06T09-17-51-794Z.json\ndeleted file mode 100644\nindex 84c8e49..0000000\n--- a/test-output/analysis-2025-07-06T09-17-51-794Z.json\n+++ /dev/null\n@@ -1,282 +0,0 @@\n-{\n-  \"metadata\": {\n-    \"timestamp\": \"2025-07-06T09:17:51.744Z\",\n-    \"mode\": \"uncommitted\",\n-    \"totalFiles\": 2,\n-    \"totalThemes\": 2,\n-    \"processingTimeMs\": 52750,\n-    \"gitBranch\": \"0407-1-1\",\n-    \"gitCommit\": \"c60ba1ba\"\n-  },\n-  \"themes\": \"Found 2 themes:\\\\n\\\\n1. **Simplify ACT environment output paths** (90%)\\\\n   src/local-testing/services/output-saver.ts\\\\n   Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output Removed debug path copying logic for ACT environments\\\\n2. **Cleaned up yarn.lock dependency ranges** (90%)\\\\n   yarn.lock\\\\n   Removed redundant version ranges from multiple package entries in yarn.lock Simplified version specifiers by removing duplicate or broader ranges\",\n-  \"summary\": \"Analyzed code changes and identified 2 themes across 1 hierarchy levels. Root themes: 2, Average confidence: 90%. \",\n-  \"rawAnalysis\": {\n-    \"themes\": [\n-      {\n-        \"id\": \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\",\n-        \"name\": \"Simplify ACT environment output paths\",\n-        \"description\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"level\": 0,\n-        \"childThemes\": [],\n-        \"affectedFiles\": [\n-          \"src/local-testing/services/output-saver.ts\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"businessImpact\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"codeSnippets\": [\n-          \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\"\n-        ],\n-        \"context\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"sourceThemes\": [\n-          \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\"\n-        ],\n-        \"consolidationMethod\": \"single\",\n-        \"detailedDescription\": \"Removed debug path copying logic for ACT environments\",\n-        \"technicalSummary\": \"Updated OUTPUT_DIR and LOCAL_DIR path constants for ACT\",\n-        \"keyChanges\": [\n-          \"OUTPUT_DIR: '/github/workspace/test-output' → './'\",\n-          \"LOCAL_DIR: '/github/workspace/test-output' → './test-output'\",\n-          \"Removed debug path copying loop\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [\n-          \"saveAnalysis\"\n-        ],\n-        \"mainClassesChanged\": [\n-          \"OutputSaver\"\n-        ],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        },\n-        \"isAtomic\": false\n-      },\n-      {\n-        \"id\": \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\",\n-        \"name\": \"Cleaned up yarn.lock dependency ranges\",\n-        \"description\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"level\": 0,\n-        \"childThemes\": [],\n-        \"affectedFiles\": [\n-          \"yarn.lock\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"businessImpact\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"codeSnippets\": [\n-          \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\"\n-        ],\n-        \"context\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"sourceThemes\": [\n-          \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\"\n-        ],\n-        \"consolidationMethod\": \"single\",\n-        \"detailedDescription\": \"Simplified version specifiers by removing duplicate or broader ranges\",\n-        \"technicalSummary\": \"Removed redundant version ranges from yarn.lock entries\",\n-        \"keyChanges\": [\n-          \"Removed ^7.0.0 || ^8.0.0 ranges from babel/core\",\n-          \"Removed ^29.0.0 || ^30.0.0 ranges from jest packages\",\n-          \"Removed >= 4.21.0 range from browserslist\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [],\n-        \"mainClassesChanged\": [],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        },\n-        \"isAtomic\": false\n-      }\n-    ],\n-    \"originalThemes\": [\n-      {\n-        \"id\": \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\",\n-        \"name\": \"Simplify ACT environment output paths\",\n-        \"description\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"level\": 0,\n-        \"childIds\": [],\n-        \"affectedFiles\": [\n-          \"src/local-testing/services/output-saver.ts\"\n-        ],\n-        \"codeSnippets\": [\n-          \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"context\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"enhancedContext\": {\n-          \"fileMetrics\": {\n-            \"totalFiles\": 1,\n-            \"fileTypes\": [\n-              \"ts\"\n-            ],\n-            \"hasTests\": false,\n-            \"hasConfig\": false,\n-            \"codeComplexity\": \"low\"\n-          },\n-          \"changePatterns\": {\n-            \"newFunctions\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"modifiedFunctions\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"newImports\": [],\n-            \"removedImports\": [],\n-            \"newClasses\": [\n-              \"OutputSaver\"\n-            ],\n-            \"modifiedClasses\": [\n-              \"OutputSaver\"\n-            ],\n-            \"architecturalPatterns\": [\n-              \"Singleton\"\n-            ],\n-            \"businessDomains\": [\n-              \"testing\"\n-            ]\n-          },\n-          \"contextSummary\": \"Simplified output directory paths and removed debug file copying for ACT environment\",\n-          \"significantChanges\": [\n-            \"Simplified output directory paths and removed debug file copying for ACT environment\"\n-          ]\n-        },\n-        \"codeChanges\": [\n-          {\n-            \"file\": \"src/local-testing/services/output-saver.ts\",\n-            \"diffHunk\": \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\",\n-            \"changeType\": \"modified\",\n-            \"functionsChanged\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"classesChanged\": [\n-              \"OutputSaver\"\n-            ],\n-            \"importsChanged\": [],\n-            \"fileType\": \".ts\",\n-            \"isTestFile\": false,\n-            \"isConfigFile\": false,\n-            \"architecturalPatterns\": [\n-              \"Singleton\"\n-            ],\n-            \"businessDomain\": \"testing\",\n-            \"codeComplexity\": \"low\",\n-            \"semanticDescription\": \"Simplified output directory paths and removed debug file copying for ACT environment\"\n-          }\n-        ],\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"detailedDescription\": \"Removed debug path copying logic for ACT environments\",\n-        \"technicalSummary\": \"Updated OUTPUT_DIR and LOCAL_DIR path constants for ACT\",\n-        \"keyChanges\": [\n-          \"OUTPUT_DIR: '/github/workspace/test-output' → './'\",\n-          \"LOCAL_DIR: '/github/workspace/test-output' → './test-output'\",\n-          \"Removed debug path copying loop\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [\n-          \"saveAnalysis\"\n-        ],\n-        \"mainClassesChanged\": [\n-          \"OutputSaver\"\n-        ],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        }\n-      },\n-      {\n-        \"id\": \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\",\n-        \"name\": \"Cleaned up yarn.lock dependency ranges\",\n-        \"description\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"level\": 0,\n-        \"childIds\": [],\n-        \"affectedFiles\": [\n-          \"yarn.lock\"\n-        ],\n-        \"codeSnippets\": [\n-          \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"context\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"enhancedContext\": {\n-          \"fileMetrics\": {\n-            \"totalFiles\": 1,\n-            \"fileTypes\": [\n-              \"lock\"\n-            ],\n-            \"hasTests\": false,\n-            \"hasConfig\": true,\n-            \"codeComplexity\": \"low\"\n-          },\n-          \"changePatterns\": {\n-            \"newFunctions\": [],\n-            \"modifiedFunctions\": [],\n-            \"newImports\": [],\n-            \"removedImports\": [],\n-            \"newClasses\": [],\n-            \"modifiedClasses\": [],\n-            \"architecturalPatterns\": [],\n-            \"businessDomains\": [\n-              \"dependencies\"\n-            ]\n-          },\n-          \"contextSummary\": \"Cleaned up duplicate dependency version ranges in yarn.lock\",\n-          \"significantChanges\": [\n-            \"Cleaned up duplicate dependency version ranges in yarn.lock\"\n-          ]\n-        },\n-        \"codeChanges\": [\n-          {\n-            \"file\": \"yarn.lock\",\n-            \"diffHunk\": \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\",\n-            \"changeType\": \"modified\",\n-            \"functionsChanged\": [],\n-            \"classesChanged\": [],\n-            \"importsChanged\": [],\n-            \"fileType\": \".lock\",\n-            \"isTestFile\": false,\n-            \"isConfigFile\": true,\n-            \"architecturalPatterns\": [],\n-            \"businessDomain\": \"dependencies\",\n-            \"codeComplexity\": \"low\",\n-            \"semanticDescription\": \"Cleaned up duplicate dependency version ranges in yarn.lock\"\n-          }\n-        ],\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"detailedDescription\": \"Simplified version specifiers by removing duplicate or broader ranges\",\n-        \"technicalSummary\": \"Removed redundant version ranges from yarn.lock entries\",\n-        \"keyChanges\": [\n-          \"Removed ^7.0.0 || ^8.0.0 ranges from babel/core\",\n-          \"Removed ^29.0.0 || ^30.0.0 ranges from jest packages\",\n-          \"Removed >= 4.21.0 range from browserslist\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [],\n-        \"mainClassesChanged\": [],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        }\n-      }\n-    ],\n-    \"summary\": \"Discovered 2 consolidated themes: Simplify ACT environment output paths, Cleaned up yarn.lock dependency ranges\",\n-    \"changedFilesCount\": 2,\n-    \"analysisTimestamp\": \"2025-07-06T09:17:05.383Z\",\n-    \"totalThemes\": 2,\n-    \"originalThemeCount\": 2,\n-    \"processingTime\": 52750,\n-    \"consolidationTime\": 14041,\n-    \"expandable\": {\n-      \"hasChildThemes\": false,\n-      \"canDrillDown\": true\n-    },\n-    \"consolidationStats\": {\n-      \"mergedThemes\": 0,\n-      \"hierarchicalThemes\": 0,\n-      \"consolidationRatio\": 0\n-    },\n-    \"expansionTime\": 19377,\n-    \"expansionStats\": {\n-      \"expandedThemes\": 0,\n-      \"maxDepth\": 0,\n-      \"averageDepth\": 0,\n-      \"totalSubThemes\": 0\n-    }\n-  }\n-}\n\\ No newline at end of file\n"
        ],
        "context": "Removed test-output/analysis-2025-07-06T09-17-51-794Z.json containing 2 code analysis themes",
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "sourceThemes": [
          "theme-c08d2a95-a4b5-40d8-a7e1-9fc6e70b125b"
        ],
        "consolidationMethod": "single",
        "detailedDescription": "Cleaned up temporary analysis output from code review process",
        "technicalSummary": "Deleted JSON file with 282 lines of analysis metadata",
        "keyChanges": [
          "Removed analysis-2025-07-06T09-17-51-794Z.json file",
          "Deleted ACT environment theme analysis",
          "Removed yarn.lock cleanup theme data"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [],
        "mainClassesChanged": [],
        "codeMetrics": {
          "filesChanged": 1
        },
        "isAtomic": false
      }
    ],
    "originalThemes": [
      {
        "id": "theme-7629764b-944b-48e7-849f-fa0de698a6b7",
        "name": "Remove console logging from OutputSaver",
        "description": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "src/local-testing/services/output-saver.ts"
        ],
        "codeSnippets": [
          "diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\nindex 75f0985..6c8ddc5 100644\n--- a/src/local-testing/services/output-saver.ts\n+++ b/src/local-testing/services/output-saver.ts\n@@ -63,8 +63,6 @@ export class OutputSaver {\n     const jsonContent = JSON.stringify(savedAnalysis, null, 2);\n     fs.writeFileSync(filepath, jsonContent, 'utf8');\n \n-    console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\n-    console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\n     \n \n     return filepath;\n@@ -98,7 +96,6 @@ export class OutputSaver {\n       const content = fs.readFileSync(filepath, 'utf8');\n       return JSON.parse(content) as SavedAnalysis;\n     } catch (error) {\n-      console.error(`[OUTPUT-SAVER] Failed to load analysis ${filename}:`, error);\n       return null;\n     }\n   }\n@@ -122,13 +119,9 @@ export class OutputSaver {\n         fs.unlinkSync(filepath);\n         deletedCount++;\n       } catch (error) {\n-        console.warn(`[OUTPUT-SAVER] Failed to delete ${filename}:`, error);\n       }\n     }\n \n-    if (deletedCount > 0) {\n-      console.log(`[OUTPUT-SAVER] Cleaned up ${deletedCount} old analysis files`);\n-    }\n   }\n \n   /**\n"
        ],
        "confidence": 0.9,
        "context": "Removed 5 console.log/error/warn statements from saveAnalysis, loadAnalysis, and cleanupOldFiles methods",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "ts"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [
              "saveAnalysis",
              "loadAnalysis",
              "cleanupOldFiles"
            ],
            "modifiedFunctions": [
              "saveAnalysis",
              "loadAnalysis",
              "cleanupOldFiles"
            ],
            "newImports": [],
            "removedImports": [],
            "newClasses": [
              "OutputSaver"
            ],
            "modifiedClasses": [
              "OutputSaver"
            ],
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomains": [
              "logging"
            ]
          },
          "contextSummary": "Removed console logging statements from file operations",
          "significantChanges": [
            "Removed console logging statements from file operations"
          ]
        },
        "codeChanges": [
          {
            "file": "src/local-testing/services/output-saver.ts",
            "diffHunk": "diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\nindex 75f0985..6c8ddc5 100644\n--- a/src/local-testing/services/output-saver.ts\n+++ b/src/local-testing/services/output-saver.ts\n@@ -63,8 +63,6 @@ export class OutputSaver {\n     const jsonContent = JSON.stringify(savedAnalysis, null, 2);\n     fs.writeFileSync(filepath, jsonContent, 'utf8');\n \n-    console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\n-    console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\n     \n \n     return filepath;\n@@ -98,7 +96,6 @@ export class OutputSaver {\n       const content = fs.readFileSync(filepath, 'utf8');\n       return JSON.parse(content) as SavedAnalysis;\n     } catch (error) {\n-      console.error(`[OUTPUT-SAVER] Failed to load analysis ${filename}:`, error);\n       return null;\n     }\n   }\n@@ -122,13 +119,9 @@ export class OutputSaver {\n         fs.unlinkSync(filepath);\n         deletedCount++;\n       } catch (error) {\n-        console.warn(`[OUTPUT-SAVER] Failed to delete ${filename}:`, error);\n       }\n     }\n \n-    if (deletedCount > 0) {\n-      console.log(`[OUTPUT-SAVER] Cleaned up ${deletedCount} old analysis files`);\n-    }\n   }\n \n   /**\n",
            "changeType": "modified",
            "functionsChanged": [
              "saveAnalysis",
              "loadAnalysis",
              "cleanupOldFiles"
            ],
            "classesChanged": [
              "OutputSaver"
            ],
            "importsChanged": [],
            "fileType": ".ts",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomain": "logging",
            "codeComplexity": "low",
            "semanticDescription": "Removed console logging statements from file operations"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Eliminated debug output for file operations",
        "technicalSummary": "Deleted console logging statements from OutputSaver class",
        "keyChanges": [
          "Removed save confirmation console.log statements",
          "Removed error logging in loadAnalysis",
          "Removed cleanup status console.log"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [
          "saveAnalysis",
          "loadAnalysis",
          "cleanupOldFiles"
        ],
        "mainClassesChanged": [
          "OutputSaver"
        ],
        "codeMetrics": {
          "filesChanged": 1
        }
      },
      {
        "id": "theme-f06cb027-4790-4398-824f-cc5dab9641c5",
        "name": "Remove debug logging from AI similarity service",
        "description": "Removed all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "src/mindmap/services/ai/ai-similarity.ts"
        ],
        "codeSnippets": [
          "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n"
        ],
        "confidence": 0.9,
        "context": "Removed all logger.debug, logger.warn, console.log, and console.warn calls from AISimilarityService",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "ts"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [
              "checkSimilarity",
              "parseAISimilarityResponse",
              "processBatchSimilarity"
            ],
            "modifiedFunctions": [
              "checkSimilarity",
              "parseAISimilarityResponse",
              "processBatchSimilarity"
            ],
            "newImports": [],
            "removedImports": [],
            "newClasses": [
              "AISimilarityService"
            ],
            "modifiedClasses": [
              "AISimilarityService"
            ],
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomains": [
              "similarity"
            ]
          },
          "contextSummary": "Removed debug logging and console output statements from AI similarity service",
          "significantChanges": [
            "Removed debug logging and console output statements from AI similarity service"
          ]
        },
        "codeChanges": [
          {
            "file": "src/mindmap/services/ai/ai-similarity.ts",
            "diffHunk": "diff --git a/src/mindmap/services/ai/ai-similarity.ts b/src/mindmap/services/ai/ai-similarity.ts\nindex 19c4b8f..e3ee0f9 100644\n--- a/src/mindmap/services/ai/ai-similarity.ts\n+++ b/src/mindmap/services/ai/ai-similarity.ts\n@@ -28,18 +28,9 @@ export class AISimilarityService {\n       );\n       const result = this.parseAISimilarityResponse(output);\n \n-      logger.debug(\n-        'AI-SIMILARITY',\n-        `\"${theme1.name}\" vs \"${theme2.name}\": ${result.shouldMerge ? 'MERGE' : 'SEPARATE'} (confidence: ${result.confidence})`\n-      );\n-      logger.debug('AI-SIMILARITY', `Reasoning: ${result.reasoning}`);\n \n       return result;\n     } catch (error) {\n-      logger.warn(\n-        'AI-SIMILARITY',\n-        `AI similarity failed for \"${theme1.name}\" vs \"${theme2.name}\": ${error}`\n-      );\n       // Fallback to basic string matching\n       return this.createFallbackSimilarity(theme1, theme2);\n     }\n@@ -166,16 +157,7 @@ CRITICAL: Respond with ONLY valid JSON.\n       };\n     }\n \n-    // Log the extraction failure for debugging\n-    console.warn(\n-      '[AI-SIMILARITY] JSON extraction failed:',\n-      extractionResult.error\n-    );\n     if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[AI-SIMILARITY] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n     }\n \n     return {\n@@ -232,9 +214,6 @@ CRITICAL: Respond with ONLY valid JSON.\n         `batch of ${expectedResults} pairs`\n       );\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Raw response length: ${response.length}`\n-      );\n \n       // Extract and validate JSON response\n       const jsonResult = JsonExtractor.extractAndValidateJson(\n@@ -255,18 +234,11 @@ CRITICAL: Respond with ONLY valid JSON.\n       }\n \n       if (batchData.results.length !== expectedResults) {\n-        console.warn(\n-          `[AI-BATCH-SIMILARITY] Expected ${expectedResults} results, got ${batchData.results.length}`\n-        );\n       }\n \n-      console.log(\n-        `[AI-BATCH-SIMILARITY] Successfully processed batch with ${batchData.results.length} results`\n-      );\n \n       return batchData;\n     } catch (error) {\n-      console.error(`[AI-BATCH-SIMILARITY] Processing failed: ${error}`);\n       throw error;\n     }\n   }\n",
            "changeType": "modified",
            "functionsChanged": [
              "checkSimilarity",
              "parseAISimilarityResponse",
              "processBatchSimilarity"
            ],
            "classesChanged": [
              "AISimilarityService"
            ],
            "importsChanged": [],
            "fileType": ".ts",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomain": "similarity",
            "codeComplexity": "low",
            "semanticDescription": "Removed debug logging and console output statements from AI similarity service"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Cleaned up debugging output in checkSimilarity, parseAISimilarityResponse, processBatchSimilarity methods",
        "technicalSummary": "Deleted 8 logging statements across 3 methods in AISimilarityService",
        "keyChanges": [
          "Removed logger.debug calls in checkSimilarity method",
          "Removed console.warn/debug calls in parseAISimilarityResponse method",
          "Removed console.log/error calls in processBatchSimilarity method"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [
          "checkSimilarity",
          "parseAISimilarityResponse",
          "processBatchSimilarity"
        ],
        "mainClassesChanged": [
          "AISimilarityService"
        ],
        "codeMetrics": {
          "filesChanged": 1
        }
      },
      {
        "id": "theme-4e6b0eb6-3852-415d-931d-cc69424d8bf0",
        "name": "Remove business domain extraction debug logging",
        "description": "Removed all console.log and console.warn statements from BusinessDomainService methods",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "src/mindmap/services/business-domain.ts"
        ],
        "codeSnippets": [
          "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n"
        ],
        "confidence": 0.9,
        "context": "Removed all console.log and console.warn statements from BusinessDomainService methods",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "ts"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [
              "extractBusinessDomains",
              "extractBusinessDomainWithAI",
              "extractBusinessDomainFallback",
              "tryDomainExtraction",
              "parseDomainExtractionResponse",
              "processDomainBatch",
              "processDomainBatchIndividually"
            ],
            "modifiedFunctions": [
              "extractBusinessDomains",
              "extractBusinessDomainWithAI",
              "extractBusinessDomainFallback",
              "tryDomainExtraction",
              "parseDomainExtractionResponse",
              "processDomainBatch",
              "processDomainBatchIndividually"
            ],
            "newImports": [],
            "removedImports": [],
            "newClasses": [
              "BusinessDomainService"
            ],
            "modifiedClasses": [
              "BusinessDomainService"
            ],
            "architecturalPatterns": [
              "Service",
              "Batch Processing"
            ],
            "businessDomains": [
              "domain-extraction"
            ]
          },
          "contextSummary": "Removed console logging statements from business domain extraction service",
          "significantChanges": [
            "Removed console logging statements from business domain extraction service"
          ]
        },
        "codeChanges": [
          {
            "file": "src/mindmap/services/business-domain.ts",
            "diffHunk": "diff --git a/src/mindmap/services/business-domain.ts b/src/mindmap/services/business-domain.ts\nindex 4771899..4c61354 100644\n--- a/src/mindmap/services/business-domain.ts\n+++ b/src/mindmap/services/business-domain.ts\n@@ -17,17 +17,11 @@ export class BusinessDomainService {\n   ): Promise<Map<string, ConsolidatedTheme[]>> {\n     const domains = new Map<string, ConsolidatedTheme[]>();\n \n-    console.log(\n-      `[DOMAIN] Extracting business domains for ${themes.length} themes using batch processing`\n-    );\n \n     // Use batch processing for significant performance improvement\n     const batchSize = this.calculateOptimalDomainBatchSize(themes.length);\n     const batches = this.createDomainBatches(themes, batchSize);\n \n-    console.log(\n-      `[DOMAIN-BATCH] Split into ${batches.length} batches of ~${batchSize} themes each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -42,14 +36,8 @@ export class BusinessDomainService {\n         onProgress: (completed, total) => {\n           const themesCompleted = completed * batchSize;\n           const totalThemes = themes.length;\n-          console.log(\n-            `[DOMAIN-BATCH] Progress: ${themesCompleted}/${totalThemes} themes processed (${completed}/${total} batches)`\n-          );\n         },\n         onError: (error, batch, retryCount) => {\n-          console.warn(\n-            `[DOMAIN-BATCH] Retry ${retryCount} for batch of ${batch.length} themes: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -63,7 +51,6 @@ export class BusinessDomainService {\n         typeof batchResult === 'object' &&\n         'error' in batchResult\n       ) {\n-        console.warn(`[DOMAIN-BATCH] Batch processing failed, using fallback`);\n         // Handle failed batch - use fallback for all themes in the failed batch\n         continue;\n       } else if (Array.isArray(batchResult)) {\n@@ -74,7 +61,6 @@ export class BusinessDomainService {\n     // Group results by domain\n     for (const result of flatResults) {\n       const { theme, domain } = result;\n-      console.log(`[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`);\n \n       if (!domains.has(domain)) {\n         domains.set(domain, []);\n@@ -110,15 +96,9 @@ export class BusinessDomainService {\n         return domainClassification.domain;\n       } else {\n         // Medium confidence - use with warning\n-        console.log(\n-          `[DOMAIN] Medium confidence (${domainClassification.confidence}) for theme \"${theme.name}\": ${domainClassification.domain}`\n-        );\n         return domainClassification.domain;\n       }\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN] AI classification failed for theme \"${theme.name}\": ${error}`\n-      );\n \n       // Graceful degradation: use simplified heuristic fallback\n       return this.extractBusinessDomainFallback(theme.name, theme.description);\n@@ -245,7 +225,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 2: Try structured prompt with context\n-    console.log(`[AI-DOMAIN] Stage 1 failed for \"${name}\", trying Stage 2`);\n     const stage2Result = await this.tryDomainExtraction(\n       name,\n       prompt,\n@@ -257,9 +236,6 @@ export class BusinessDomainService {\n     }\n \n     // Stage 3: Enhanced fallback using AI response keywords\n-    console.warn(\n-      `[AI-DOMAIN] Both stages failed for \"${name}\", using enhanced fallback`\n-    );\n     return this.extractBusinessDomainFallback(name, description || '');\n   }\n \n@@ -284,14 +260,12 @@ export class BusinessDomainService {\n         });\n \n         const domain = this.parseDomainExtractionResponse(output);\n-        console.log(`[AI-DOMAIN] ${stage} result for \"${name}\": \"${domain}\"`);\n \n         return domain;\n       } finally {\n         cleanup();\n       }\n     } catch (error) {\n-      console.warn(`[AI-DOMAIN] ${stage} extraction failed:`, error);\n       return null;\n     }\n   }\n@@ -385,9 +359,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n     // Second try: extract domain from longer response\n     const extractedDomain = this.extractDomainFromResponse(output);\n     if (extractedDomain && this.isValidDomainName(extractedDomain)) {\n-      console.log(\n-        `[AI-DOMAIN] Extracted domain from response: \"${extractedDomain}\"`\n-      );\n       return extractedDomain;\n     }\n \n@@ -545,16 +516,10 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         }\n \n         results.push({ theme, domain });\n-        console.log(\n-          `[DOMAIN-BATCH] Theme \"${theme.name}\" → Domain \"${domain}\"`\n-        );\n       }\n \n       return results;\n     } catch (error) {\n-      console.warn(\n-        `[DOMAIN-BATCH] Batch processing failed for ${themes.length} themes, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing\n       return await this.processDomainBatchIndividually(themes);\n@@ -574,9 +539,6 @@ OUTPUT THE DOMAIN NAME NOW (nothing else):`;\n         const domain = await this.extractBusinessDomainWithAI(theme);\n         results.push({ theme, domain });\n       } catch (error) {\n-        console.warn(\n-          `[DOMAIN-BATCH-FALLBACK] Failed individual processing for \"${theme.name}\": ${error}`\n-        );\n         // Use fallback domain for failed individual processing\n         const fallbackDomain = this.extractBusinessDomainFallback(\n           theme.name,\n",
            "changeType": "modified",
            "functionsChanged": [
              "extractBusinessDomains",
              "extractBusinessDomainWithAI",
              "extractBusinessDomainFallback",
              "tryDomainExtraction",
              "parseDomainExtractionResponse",
              "processDomainBatch",
              "processDomainBatchIndividually"
            ],
            "classesChanged": [
              "BusinessDomainService"
            ],
            "importsChanged": [],
            "fileType": ".ts",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [
              "Service",
              "Batch Processing"
            ],
            "businessDomain": "domain-extraction",
            "codeComplexity": "low",
            "semanticDescription": "Removed console logging statements from business domain extraction service"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Cleaned up 15+ logging statements across domain extraction workflow",
        "technicalSummary": "Deleted debug logging from all BusinessDomainService methods",
        "keyChanges": [
          "Removed batch processing progress logs",
          "Removed AI classification confidence warnings",
          "Removed domain extraction result logging"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [
          "extractBusinessDomains",
          "extractBusinessDomainWithAI",
          "extractBusinessDomainFallback",
          "tryDomainExtraction",
          "parseDomainExtractionResponse",
          "processDomainBatch",
          "processDomainBatchIndividually"
        ],
        "mainClassesChanged": [
          "BusinessDomainService"
        ],
        "codeMetrics": {
          "filesChanged": 1
        }
      },
      {
        "id": "theme-f156f35b-0531-4a94-a562-1cffed690a2d",
        "name": "Remove console logging from theme naming",
        "description": "Removed 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "src/mindmap/services/theme-naming.ts"
        ],
        "codeSnippets": [
          "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n"
        ],
        "confidence": 0.9,
        "context": "Removed 4 console.log/warn statements from ThemeNamingService generateMergedThemeName method",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "ts"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [
              "generateMergedThemeName"
            ],
            "modifiedFunctions": [
              "generateMergedThemeName"
            ],
            "newImports": [],
            "removedImports": [],
            "newClasses": [
              "ThemeNamingService"
            ],
            "modifiedClasses": [
              "ThemeNamingService"
            ],
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomains": [
              "theming"
            ]
          },
          "contextSummary": "Removed console logging statements from theme naming service",
          "significantChanges": [
            "Removed console logging statements from theme naming service"
          ]
        },
        "codeChanges": [
          {
            "file": "src/mindmap/services/theme-naming.ts",
            "diffHunk": "diff --git a/src/mindmap/services/theme-naming.ts b/src/mindmap/services/theme-naming.ts\nindex 60ca0f0..6264962 100644\n--- a/src/mindmap/services/theme-naming.ts\n+++ b/src/mindmap/services/theme-naming.ts\n@@ -32,15 +32,11 @@ export class ThemeNamingService {\n         });\n \n         const result = this.parseMergedThemeNamingResponse(output);\n-        console.log(`[AI-NAMING] Generated merged theme: \"${result.name}\"`);\n \n         // Validate the generated name\n         if (this.isValidThemeName(result.name)) {\n           return result;\n         } else {\n-          console.warn(\n-            `[AI-NAMING] Generated name invalid, using fallback: \"${result.name}\"`\n-          );\n           return {\n             name: 'Merged Changes',\n             description: 'Consolidated related changes',\n@@ -50,7 +46,6 @@ export class ThemeNamingService {\n         cleanup(); // Ensure file is cleaned up even if execution fails\n       }\n     } catch (error) {\n-      console.warn('AI theme naming failed:', error);\n       return {\n         name: 'Merged Changes',\n         description: 'Consolidated related changes',\n@@ -233,16 +228,6 @@ Respond in this exact JSON format (no other text):\n       };\n     }\n \n-    console.warn(\n-      '[THEME-NAMING] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-NAMING] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     return {\n       name: 'Merged Changes',\n",
            "changeType": "modified",
            "functionsChanged": [
              "generateMergedThemeName"
            ],
            "classesChanged": [
              "ThemeNamingService"
            ],
            "importsChanged": [],
            "fileType": ".ts",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomain": "theming",
            "codeComplexity": "low",
            "semanticDescription": "Removed console logging statements from theme naming service"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Cleaned up debug output for production readiness",
        "technicalSummary": "Deleted console.log, console.warn, and console.debug statements",
        "keyChanges": [
          "Removed success theme generation logging",
          "Removed invalid name fallback warning",
          "Removed JSON extraction failure logging"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [
          "generateMergedThemeName"
        ],
        "mainClassesChanged": [
          "ThemeNamingService"
        ],
        "codeMetrics": {
          "filesChanged": 1
        }
      },
      {
        "id": "theme-21c7150c-7131-4c8c-8f4e-2bc48657e790",
        "name": "Remove console logging from theme service",
        "description": "Removed console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "src/mindmap/services/theme-service.ts"
        ],
        "codeSnippets": [
          "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n"
        ],
        "confidence": 0.9,
        "context": "Removed console.warn and console.error statements from ClaudeService, ThemeContextManager, and ThemeService",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "ts"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [
              "analyzeChunk",
              "processAnalysisResults",
              "analyzeThemes"
            ],
            "modifiedFunctions": [
              "analyzeChunk",
              "processAnalysisResults",
              "analyzeThemes"
            ],
            "newImports": [],
            "removedImports": [],
            "newClasses": [
              "ClaudeService",
              "ThemeContextManager",
              "ThemeService"
            ],
            "modifiedClasses": [
              "ClaudeService",
              "ThemeContextManager",
              "ThemeService"
            ],
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomains": [
              "analysis"
            ]
          },
          "contextSummary": "Removed console logging statements from theme analysis service",
          "significantChanges": [
            "Removed console logging statements from theme analysis service"
          ]
        },
        "codeChanges": [
          {
            "file": "src/mindmap/services/theme-service.ts",
            "diffHunk": "diff --git a/src/mindmap/services/theme-service.ts b/src/mindmap/services/theme-service.ts\nindex 4b9bccb..77dfe75 100644\n--- a/src/mindmap/services/theme-service.ts\n+++ b/src/mindmap/services/theme-service.ts\n@@ -71,7 +71,6 @@ class ClaudeService {\n       }\n     } catch (err) {\n       const error = err instanceof Error ? err.message : String(err);\n-      console.warn('Claude analysis failed, using fallback:', error);\n       return this.createFallbackAnalysis(chunk);\n     }\n   }\n@@ -192,16 +191,6 @@ CRITICAL: Respond with ONLY valid JSON:\n       };\n     }\n \n-    console.warn(\n-      '[THEME-SERVICE] JSON extraction failed:',\n-      extractionResult.error\n-    );\n-    if (extractionResult.originalResponse) {\n-      console.debug(\n-        '[THEME-SERVICE] Original response:',\n-        extractionResult.originalResponse?.substring(0, 200) + '...'\n-      );\n-    }\n \n     // Use the better fallback that includes filename\n     return this.createFallbackAnalysis(chunk);\n@@ -281,9 +270,6 @@ class ThemeContextManager {\n   ): void {\n     for (const result of results) {\n       if (result.error) {\n-        console.warn(\n-          `Chunk analysis failed for ${result.chunk.filename}: ${result.error}`\n-        );\n       }\n       const placement = this.determineThemePlacement(result.analysis);\n       const codeChange = codeChangeMap.get(result.chunk.filename);\n@@ -726,7 +712,6 @@ export class ThemeService {\n         analysisResult.expandable.hasChildThemes = hasHierarchy;\n       }\n     } catch (error) {\n-      console.error('Theme analysis failed:', error);\n       analysisResult.summary = 'Theme analysis failed - using fallback';\n       const fallbackThemes = this.createFallbackThemes(changedFiles);\n       analysisResult.themes = fallbackThemes.map((theme) => ({\n",
            "changeType": "modified",
            "functionsChanged": [
              "analyzeChunk",
              "processAnalysisResults",
              "analyzeThemes"
            ],
            "classesChanged": [
              "ClaudeService",
              "ThemeContextManager",
              "ThemeService"
            ],
            "importsChanged": [],
            "fileType": ".ts",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [
              "Service"
            ],
            "businessDomain": "analysis",
            "codeComplexity": "low",
            "semanticDescription": "Removed console logging statements from theme analysis service"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Eliminated debug output for cleaner production logs",
        "technicalSummary": "Deleted 4 console logging statements across 3 classes",
        "keyChanges": [
          "Removed Claude analysis failure warning log",
          "Removed JSON extraction error logging",
          "Removed theme analysis error logging"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [
          "analyzeChunk",
          "processAnalysisResults",
          "analyzeThemes"
        ],
        "mainClassesChanged": [
          "ClaudeService",
          "ThemeContextManager",
          "ThemeService"
        ],
        "codeMetrics": {
          "filesChanged": 1
        }
      },
      {
        "id": "theme-c889aac6-c74e-4cb2-b0b4-eb978d95aa6a",
        "name": "Remove debug logging from theme similarity service",
        "description": "Removed all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "src/mindmap/services/theme-similarity.ts"
        ],
        "codeSnippets": [
          "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n"
        ],
        "confidence": 0.9,
        "context": "Removed all logger.info, logger.debug, logger.trace, and console.log statements from theme-similarity.ts",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "ts"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [
              "calculateSimilarity",
              "consolidateThemes",
              "findMergeGroups",
              "calculateBatchSimilarities",
              "buildHierarchies",
              "processSimilarityBatch",
              "parseBatchSimilarityResponse",
              "processBatchIndividually"
            ],
            "modifiedFunctions": [
              "calculateSimilarity",
              "consolidateThemes",
              "findMergeGroups",
              "calculateBatchSimilarities",
              "buildHierarchies",
              "processSimilarityBatch",
              "parseBatchSimilarityResponse",
              "processBatchIndividually"
            ],
            "newImports": [],
            "removedImports": [],
            "newClasses": [
              "ThemeSimilarityService"
            ],
            "modifiedClasses": [
              "ThemeSimilarityService"
            ],
            "architecturalPatterns": [
              "Service",
              "Cache"
            ],
            "businessDomains": [
              "similarity"
            ]
          },
          "contextSummary": "Removed logging and console output statements from theme similarity service",
          "significantChanges": [
            "Removed logging and console output statements from theme similarity service"
          ]
        },
        "codeChanges": [
          {
            "file": "src/mindmap/services/theme-similarity.ts",
            "diffHunk": "diff --git a/src/mindmap/services/theme-similarity.ts b/src/mindmap/services/theme-similarity.ts\nindex a317259..e04890d 100644\n--- a/src/mindmap/services/theme-similarity.ts\n+++ b/src/mindmap/services/theme-similarity.ts\n@@ -63,10 +63,6 @@ export class ThemeSimilarityService {\n     this.businessDomainService = new BusinessDomainService(anthropicApiKey);\n     this.themeNamingService = new ThemeNamingService();\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Config: threshold=${this.config.similarityThreshold}, minForParent=${this.config.minThemesForParent}`\n-    );\n   }\n \n   async calculateSimilarity(\n@@ -78,14 +74,12 @@ export class ThemeSimilarityService {\n     // Check if already calculating\n     const pending = this.pendingCalculations.get(cacheKey);\n     if (pending) {\n-      logger.trace('SIMILARITY', `Pending: ${theme1.name} vs ${theme2.name}`);\n       return pending;\n     }\n \n     // Check cache\n     const cached = this.similarityCache.getCachedSimilarity(cacheKey);\n     if (cached) {\n-      logger.trace('SIMILARITY', `Cache hit: ${theme1.name} vs ${theme2.name}`);\n       return cached.similarity;\n     }\n \n@@ -122,10 +116,6 @@ export class ThemeSimilarityService {\n \n     // Skip only if NO file overlap AND completely different names\n     if (fileOverlap === 0 && nameSimilarity < 0.1) {\n-      logger.trace(\n-        'SIMILARITY',\n-        `Skip: no overlap - ${theme1.name} vs ${theme2.name}`\n-      );\n       const result = {\n         combinedScore: 0,\n         nameScore: 0,\n@@ -162,7 +152,6 @@ export class ThemeSimilarityService {\n   }\n \n   async consolidateThemes(themes: Theme[]): Promise<ConsolidatedTheme[]> {\n-    console.log(`[CONSOLIDATION] Starting with ${themes.length} themes`);\n     if (themes.length === 0) return [];\n \n     const startTime = Date.now();\n@@ -171,23 +160,15 @@ export class ThemeSimilarityService {\n       .getMetrics().totalCalls;\n \n     // Step 1: Find merge candidates\n-    logger.info('SIMILARITY', 'Step 1: Finding merge candidates');\n     const mergeGroups = await this.findMergeGroups(themes);\n-    logger.info('SIMILARITY', `Found ${mergeGroups.size} merge groups`);\n \n     // Step 2: Create consolidated themes\n-    logger.info('SIMILARITY', 'Step 2: Creating consolidated themes');\n     const consolidated = await this.createConsolidatedThemes(\n       mergeGroups,\n       themes\n     );\n-    logger.info(\n-      'SIMILARITY',\n-      `Created ${consolidated.length} consolidated themes`\n-    );\n \n     // Step 3: Build hierarchies\n-    logger.info('SIMILARITY', 'Step 3: Building hierarchies');\n     const hierarchical = await this.buildHierarchies(consolidated);\n \n     // Update effectiveness metrics\n@@ -206,10 +187,6 @@ export class ThemeSimilarityService {\n       ((themes.length - hierarchical.length) / themes.length) *\n       100\n     ).toFixed(1);\n-    logger.info(\n-      'SIMILARITY',\n-      `Final result: ${hierarchical.length} themes (${reductionPercent}% reduction, ${this.effectiveness.mergeRate.toFixed(1)}% merge rate)`\n-    );\n \n     return hierarchical;\n   }\n@@ -237,10 +214,6 @@ export class ThemeSimilarityService {\n   private async findMergeGroups(\n     themes: Theme[]\n   ): Promise<Map<string, string[]>> {\n-    logger.debug(\n-      'SIMILARITY',\n-      `Using batch processing for ${themes.length} themes`\n-    );\n \n     // Step 1: Collect all theme pairs that need comparison\n     const allPairs: ThemePair[] = [];\n@@ -255,7 +228,6 @@ export class ThemeSimilarityService {\n     }\n \n     this.effectiveness.pairsAnalyzed = allPairs.length;\n-    logger.info('SIMILARITY', `Total pairs to analyze: ${allPairs.length}`);\n \n     // Step 2: Calculate similarities using batch processing and early termination\n     const similarities = await this.calculateBatchSimilarities(allPairs);\n@@ -270,16 +242,11 @@ export class ThemeSimilarityService {\n     const similarities = new Map<string, SimilarityMetrics>();\n \n     // Use batch AI processing for significant performance improvement\n-    logger.debug('SIMILARITY', `Processing ${pairs.length} pairs in batches`);\n \n     // Split into batches for optimal processing\n     const batchSize = this.calculateOptimalBatchSize(pairs.length);\n     const batches = this.createPairBatches(pairs, batchSize);\n \n-    logger.debug(\n-      'SIMILARITY',\n-      `${batches.length} batches of ~${batchSize} pairs each`\n-    );\n \n     // Process batches concurrently\n     const results = await ConcurrencyManager.processConcurrentlyWithLimit(\n@@ -296,17 +263,9 @@ export class ThemeSimilarityService {\n           if (completed % Math.max(1, Math.floor(total / 4)) === 0) {\n             const pairsCompleted = completed * batchSize;\n             const totalPairs = pairs.length;\n-            logger.debug(\n-              'SIMILARITY',\n-              `Progress: ${pairsCompleted}/${totalPairs} pairs (${Math.round((completed / total) * 100)}%)`\n-            );\n           }\n         },\n         onError: (error, batch, retryCount) => {\n-          logger.warn(\n-            'SIMILARITY',\n-            `Retry ${retryCount} for batch: ${error.message}`\n-          );\n         },\n       }\n     );\n@@ -319,7 +278,6 @@ export class ThemeSimilarityService {\n       if (result && typeof result === 'object' && 'error' in result) {\n         failedCount++;\n         // For failed batches, we can't process individual pairs, so skip them\n-        console.warn(`[SIMILARITY-BATCH] Batch failed: ${result.error}`);\n       } else {\n         successCount++;\n         // result is a Map<string, SimilarityMetrics> from processSimilarityBatch\n@@ -330,10 +288,6 @@ export class ThemeSimilarityService {\n       }\n     }\n \n-    logger.info(\n-      'SIMILARITY',\n-      `Batch processing: ${successCount} successful, ${failedCount} failed`\n-    );\n     return similarities;\n   }\n \n@@ -365,10 +319,6 @@ export class ThemeSimilarityService {\n         ) {\n           group.push(otherTheme.id);\n           processed.add(otherTheme.id);\n-          logger.trace(\n-            'SIMILARITY',\n-            `Merge: ${theme.name} + ${otherTheme.name} (${similarity.combinedScore.toFixed(2)})`\n-          );\n         }\n       }\n \n@@ -411,15 +361,9 @@ export class ThemeSimilarityService {\n       await this.businessDomainService.groupByBusinessDomain(themes);\n     const result: ConsolidatedTheme[] = [];\n \n-    console.log(`[HIERARCHY] Found ${domainGroups.size} business domains:`);\n     for (const [domain, domainThemes] of domainGroups) {\n-      console.log(\n-        `[HIERARCHY] Domain \"${domain}\": ${domainThemes.length} themes (min required: ${this.config.minThemesForParent})`\n-      );\n-\n       if (domainThemes.length >= this.config.minThemesForParent) {\n         // Create parent theme\n-        console.log(`[HIERARCHY] ✅ Creating parent theme for \"${domain}\"`);\n         const parentTheme = this.themeNamingService.createParentTheme(\n           domain,\n           domainThemes\n@@ -435,9 +379,6 @@ export class ThemeSimilarityService {\n         result.push(parentTheme);\n       } else {\n         // Keep as root themes\n-        console.log(\n-          `[HIERARCHY] ⚠️ Keeping \"${domain}\" themes as individual (below threshold)`\n-        );\n         domainThemes.forEach((theme) => {\n           theme.level = 0;\n           result.push(theme);\n@@ -603,13 +544,7 @@ export class ThemeSimilarityService {\n       // Parse batch response into individual similarity metrics\n       this.parseBatchSimilarityResponse(response, pairs, batchResults);\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Successfully processed batch of ${pairs.length} pairs`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Batch processing failed for ${pairs.length} pairs, falling back to individual processing: ${error}`\n-      );\n \n       // Fallback to individual processing if batch fails\n       await this.processBatchIndividually(pairs, batchResults);\n@@ -700,13 +635,7 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         }\n       }\n \n-      console.log(\n-        `[SIMILARITY-BATCH] Parsed ${results.size}/${pairs.length} similarity results from batch`\n-      );\n     } catch (error) {\n-      console.warn(\n-        `[SIMILARITY-BATCH] Failed to parse batch response: ${error}`\n-      );\n       throw error;\n     }\n   }\n@@ -718,9 +647,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n     pairs: ThemePair[],\n     results: Map<string, SimilarityMetrics>\n   ): Promise<void> {\n-    console.log(\n-      `[SIMILARITY-FALLBACK] Processing ${pairs.length} pairs individually`\n-    );\n \n     for (const pair of pairs) {\n       try {\n@@ -730,9 +656,6 @@ Be conservative - only merge when themes serve the same business purpose.`;\n         );\n         results.set(pair.id, similarity);\n       } catch (error) {\n-        console.warn(\n-          `[SIMILARITY-FALLBACK] Failed individual processing for ${pair.id}: ${error}`\n-        );\n         // Set default non-match result\n         results.set(pair.id, {\n           combinedScore: 0,\n",
            "changeType": "modified",
            "functionsChanged": [
              "calculateSimilarity",
              "consolidateThemes",
              "findMergeGroups",
              "calculateBatchSimilarities",
              "buildHierarchies",
              "processSimilarityBatch",
              "parseBatchSimilarityResponse",
              "processBatchIndividually"
            ],
            "classesChanged": [
              "ThemeSimilarityService"
            ],
            "importsChanged": [],
            "fileType": ".ts",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [
              "Service",
              "Cache"
            ],
            "businessDomain": "similarity",
            "codeComplexity": "low",
            "semanticDescription": "Removed logging and console output statements from theme similarity service"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Cleaned up 25+ debug statements across 8 functions",
        "technicalSummary": "Deleted debugging output from ThemeSimilarityService methods",
        "keyChanges": [
          "Removed constructor config logging",
          "Deleted batch processing progress logs",
          "Removed similarity calculation trace messages"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [
          "calculateSimilarity",
          "consolidateThemes",
          "findMergeGroups",
          "calculateBatchSimilarities",
          "buildHierarchies",
          "processSimilarityBatch",
          "parseBatchSimilarityResponse",
          "processBatchIndividually"
        ],
        "mainClassesChanged": [
          "ThemeSimilarityService"
        ],
        "codeMetrics": {
          "filesChanged": 1
        }
      },
      {
        "id": "theme-c08d2a95-a4b5-40d8-a7e1-9fc6e70b125b",
        "name": "Deleted test output analysis file",
        "description": "Removed test-output/analysis-2025-07-06T09-17-51-794Z.json containing 2 code analysis themes",
        "level": 0,
        "childIds": [],
        "affectedFiles": [
          "test-output/analysis-2025-07-06T09-17-51-794Z.json"
        ],
        "codeSnippets": [
          "diff --git a/test-output/analysis-2025-07-06T09-17-51-794Z.json b/test-output/analysis-2025-07-06T09-17-51-794Z.json\ndeleted file mode 100644\nindex 84c8e49..0000000\n--- a/test-output/analysis-2025-07-06T09-17-51-794Z.json\n+++ /dev/null\n@@ -1,282 +0,0 @@\n-{\n-  \"metadata\": {\n-    \"timestamp\": \"2025-07-06T09:17:51.744Z\",\n-    \"mode\": \"uncommitted\",\n-    \"totalFiles\": 2,\n-    \"totalThemes\": 2,\n-    \"processingTimeMs\": 52750,\n-    \"gitBranch\": \"0407-1-1\",\n-    \"gitCommit\": \"c60ba1ba\"\n-  },\n-  \"themes\": \"Found 2 themes:\\\\n\\\\n1. **Simplify ACT environment output paths** (90%)\\\\n   src/local-testing/services/output-saver.ts\\\\n   Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output Removed debug path copying logic for ACT environments\\\\n2. **Cleaned up yarn.lock dependency ranges** (90%)\\\\n   yarn.lock\\\\n   Removed redundant version ranges from multiple package entries in yarn.lock Simplified version specifiers by removing duplicate or broader ranges\",\n-  \"summary\": \"Analyzed code changes and identified 2 themes across 1 hierarchy levels. Root themes: 2, Average confidence: 90%. \",\n-  \"rawAnalysis\": {\n-    \"themes\": [\n-      {\n-        \"id\": \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\",\n-        \"name\": \"Simplify ACT environment output paths\",\n-        \"description\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"level\": 0,\n-        \"childThemes\": [],\n-        \"affectedFiles\": [\n-          \"src/local-testing/services/output-saver.ts\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"businessImpact\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"codeSnippets\": [\n-          \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\"\n-        ],\n-        \"context\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"sourceThemes\": [\n-          \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\"\n-        ],\n-        \"consolidationMethod\": \"single\",\n-        \"detailedDescription\": \"Removed debug path copying logic for ACT environments\",\n-        \"technicalSummary\": \"Updated OUTPUT_DIR and LOCAL_DIR path constants for ACT\",\n-        \"keyChanges\": [\n-          \"OUTPUT_DIR: '/github/workspace/test-output' → './'\",\n-          \"LOCAL_DIR: '/github/workspace/test-output' → './test-output'\",\n-          \"Removed debug path copying loop\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [\n-          \"saveAnalysis\"\n-        ],\n-        \"mainClassesChanged\": [\n-          \"OutputSaver\"\n-        ],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        },\n-        \"isAtomic\": false\n-      },\n-      {\n-        \"id\": \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\",\n-        \"name\": \"Cleaned up yarn.lock dependency ranges\",\n-        \"description\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"level\": 0,\n-        \"childThemes\": [],\n-        \"affectedFiles\": [\n-          \"yarn.lock\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"businessImpact\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"codeSnippets\": [\n-          \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\"\n-        ],\n-        \"context\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"sourceThemes\": [\n-          \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\"\n-        ],\n-        \"consolidationMethod\": \"single\",\n-        \"detailedDescription\": \"Simplified version specifiers by removing duplicate or broader ranges\",\n-        \"technicalSummary\": \"Removed redundant version ranges from yarn.lock entries\",\n-        \"keyChanges\": [\n-          \"Removed ^7.0.0 || ^8.0.0 ranges from babel/core\",\n-          \"Removed ^29.0.0 || ^30.0.0 ranges from jest packages\",\n-          \"Removed >= 4.21.0 range from browserslist\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [],\n-        \"mainClassesChanged\": [],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        },\n-        \"isAtomic\": false\n-      }\n-    ],\n-    \"originalThemes\": [\n-      {\n-        \"id\": \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\",\n-        \"name\": \"Simplify ACT environment output paths\",\n-        \"description\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"level\": 0,\n-        \"childIds\": [],\n-        \"affectedFiles\": [\n-          \"src/local-testing/services/output-saver.ts\"\n-        ],\n-        \"codeSnippets\": [\n-          \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"context\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"enhancedContext\": {\n-          \"fileMetrics\": {\n-            \"totalFiles\": 1,\n-            \"fileTypes\": [\n-              \"ts\"\n-            ],\n-            \"hasTests\": false,\n-            \"hasConfig\": false,\n-            \"codeComplexity\": \"low\"\n-          },\n-          \"changePatterns\": {\n-            \"newFunctions\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"modifiedFunctions\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"newImports\": [],\n-            \"removedImports\": [],\n-            \"newClasses\": [\n-              \"OutputSaver\"\n-            ],\n-            \"modifiedClasses\": [\n-              \"OutputSaver\"\n-            ],\n-            \"architecturalPatterns\": [\n-              \"Singleton\"\n-            ],\n-            \"businessDomains\": [\n-              \"testing\"\n-            ]\n-          },\n-          \"contextSummary\": \"Simplified output directory paths and removed debug file copying for ACT environment\",\n-          \"significantChanges\": [\n-            \"Simplified output directory paths and removed debug file copying for ACT environment\"\n-          ]\n-        },\n-        \"codeChanges\": [\n-          {\n-            \"file\": \"src/local-testing/services/output-saver.ts\",\n-            \"diffHunk\": \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\",\n-            \"changeType\": \"modified\",\n-            \"functionsChanged\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"classesChanged\": [\n-              \"OutputSaver\"\n-            ],\n-            \"importsChanged\": [],\n-            \"fileType\": \".ts\",\n-            \"isTestFile\": false,\n-            \"isConfigFile\": false,\n-            \"architecturalPatterns\": [\n-              \"Singleton\"\n-            ],\n-            \"businessDomain\": \"testing\",\n-            \"codeComplexity\": \"low\",\n-            \"semanticDescription\": \"Simplified output directory paths and removed debug file copying for ACT environment\"\n-          }\n-        ],\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"detailedDescription\": \"Removed debug path copying logic for ACT environments\",\n-        \"technicalSummary\": \"Updated OUTPUT_DIR and LOCAL_DIR path constants for ACT\",\n-        \"keyChanges\": [\n-          \"OUTPUT_DIR: '/github/workspace/test-output' → './'\",\n-          \"LOCAL_DIR: '/github/workspace/test-output' → './test-output'\",\n-          \"Removed debug path copying loop\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [\n-          \"saveAnalysis\"\n-        ],\n-        \"mainClassesChanged\": [\n-          \"OutputSaver\"\n-        ],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        }\n-      },\n-      {\n-        \"id\": \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\",\n-        \"name\": \"Cleaned up yarn.lock dependency ranges\",\n-        \"description\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"level\": 0,\n-        \"childIds\": [],\n-        \"affectedFiles\": [\n-          \"yarn.lock\"\n-        ],\n-        \"codeSnippets\": [\n-          \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"context\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"enhancedContext\": {\n-          \"fileMetrics\": {\n-            \"totalFiles\": 1,\n-            \"fileTypes\": [\n-              \"lock\"\n-            ],\n-            \"hasTests\": false,\n-            \"hasConfig\": true,\n-            \"codeComplexity\": \"low\"\n-          },\n-          \"changePatterns\": {\n-            \"newFunctions\": [],\n-            \"modifiedFunctions\": [],\n-            \"newImports\": [],\n-            \"removedImports\": [],\n-            \"newClasses\": [],\n-            \"modifiedClasses\": [],\n-            \"architecturalPatterns\": [],\n-            \"businessDomains\": [\n-              \"dependencies\"\n-            ]\n-          },\n-          \"contextSummary\": \"Cleaned up duplicate dependency version ranges in yarn.lock\",\n-          \"significantChanges\": [\n-            \"Cleaned up duplicate dependency version ranges in yarn.lock\"\n-          ]\n-        },\n-        \"codeChanges\": [\n-          {\n-            \"file\": \"yarn.lock\",\n-            \"diffHunk\": \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\",\n-            \"changeType\": \"modified\",\n-            \"functionsChanged\": [],\n-            \"classesChanged\": [],\n-            \"importsChanged\": [],\n-            \"fileType\": \".lock\",\n-            \"isTestFile\": false,\n-            \"isConfigFile\": true,\n-            \"architecturalPatterns\": [],\n-            \"businessDomain\": \"dependencies\",\n-            \"codeComplexity\": \"low\",\n-            \"semanticDescription\": \"Cleaned up duplicate dependency version ranges in yarn.lock\"\n-          }\n-        ],\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"detailedDescription\": \"Simplified version specifiers by removing duplicate or broader ranges\",\n-        \"technicalSummary\": \"Removed redundant version ranges from yarn.lock entries\",\n-        \"keyChanges\": [\n-          \"Removed ^7.0.0 || ^8.0.0 ranges from babel/core\",\n-          \"Removed ^29.0.0 || ^30.0.0 ranges from jest packages\",\n-          \"Removed >= 4.21.0 range from browserslist\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [],\n-        \"mainClassesChanged\": [],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        }\n-      }\n-    ],\n-    \"summary\": \"Discovered 2 consolidated themes: Simplify ACT environment output paths, Cleaned up yarn.lock dependency ranges\",\n-    \"changedFilesCount\": 2,\n-    \"analysisTimestamp\": \"2025-07-06T09:17:05.383Z\",\n-    \"totalThemes\": 2,\n-    \"originalThemeCount\": 2,\n-    \"processingTime\": 52750,\n-    \"consolidationTime\": 14041,\n-    \"expandable\": {\n-      \"hasChildThemes\": false,\n-      \"canDrillDown\": true\n-    },\n-    \"consolidationStats\": {\n-      \"mergedThemes\": 0,\n-      \"hierarchicalThemes\": 0,\n-      \"consolidationRatio\": 0\n-    },\n-    \"expansionTime\": 19377,\n-    \"expansionStats\": {\n-      \"expandedThemes\": 0,\n-      \"maxDepth\": 0,\n-      \"averageDepth\": 0,\n-      \"totalSubThemes\": 0\n-    }\n-  }\n-}\n\\ No newline at end of file\n"
        ],
        "confidence": 0.9,
        "context": "Removed test-output/analysis-2025-07-06T09-17-51-794Z.json containing 2 code analysis themes",
        "enhancedContext": {
          "fileMetrics": {
            "totalFiles": 1,
            "fileTypes": [
              "json"
            ],
            "hasTests": false,
            "hasConfig": false,
            "codeComplexity": "low"
          },
          "changePatterns": {
            "newFunctions": [],
            "modifiedFunctions": [],
            "newImports": [],
            "removedImports": [],
            "newClasses": [],
            "modifiedClasses": [],
            "architecturalPatterns": [],
            "businessDomains": [
              "analysis"
            ]
          },
          "contextSummary": "Deleted analysis output file containing code review results",
          "significantChanges": [
            "Deleted analysis output file containing code review results"
          ]
        },
        "codeChanges": [
          {
            "file": "test-output/analysis-2025-07-06T09-17-51-794Z.json",
            "diffHunk": "diff --git a/test-output/analysis-2025-07-06T09-17-51-794Z.json b/test-output/analysis-2025-07-06T09-17-51-794Z.json\ndeleted file mode 100644\nindex 84c8e49..0000000\n--- a/test-output/analysis-2025-07-06T09-17-51-794Z.json\n+++ /dev/null\n@@ -1,282 +0,0 @@\n-{\n-  \"metadata\": {\n-    \"timestamp\": \"2025-07-06T09:17:51.744Z\",\n-    \"mode\": \"uncommitted\",\n-    \"totalFiles\": 2,\n-    \"totalThemes\": 2,\n-    \"processingTimeMs\": 52750,\n-    \"gitBranch\": \"0407-1-1\",\n-    \"gitCommit\": \"c60ba1ba\"\n-  },\n-  \"themes\": \"Found 2 themes:\\\\n\\\\n1. **Simplify ACT environment output paths** (90%)\\\\n   src/local-testing/services/output-saver.ts\\\\n   Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output Removed debug path copying logic for ACT environments\\\\n2. **Cleaned up yarn.lock dependency ranges** (90%)\\\\n   yarn.lock\\\\n   Removed redundant version ranges from multiple package entries in yarn.lock Simplified version specifiers by removing duplicate or broader ranges\",\n-  \"summary\": \"Analyzed code changes and identified 2 themes across 1 hierarchy levels. Root themes: 2, Average confidence: 90%. \",\n-  \"rawAnalysis\": {\n-    \"themes\": [\n-      {\n-        \"id\": \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\",\n-        \"name\": \"Simplify ACT environment output paths\",\n-        \"description\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"level\": 0,\n-        \"childThemes\": [],\n-        \"affectedFiles\": [\n-          \"src/local-testing/services/output-saver.ts\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"businessImpact\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"codeSnippets\": [\n-          \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\"\n-        ],\n-        \"context\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"sourceThemes\": [\n-          \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\"\n-        ],\n-        \"consolidationMethod\": \"single\",\n-        \"detailedDescription\": \"Removed debug path copying logic for ACT environments\",\n-        \"technicalSummary\": \"Updated OUTPUT_DIR and LOCAL_DIR path constants for ACT\",\n-        \"keyChanges\": [\n-          \"OUTPUT_DIR: '/github/workspace/test-output' → './'\",\n-          \"LOCAL_DIR: '/github/workspace/test-output' → './test-output'\",\n-          \"Removed debug path copying loop\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [\n-          \"saveAnalysis\"\n-        ],\n-        \"mainClassesChanged\": [\n-          \"OutputSaver\"\n-        ],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        },\n-        \"isAtomic\": false\n-      },\n-      {\n-        \"id\": \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\",\n-        \"name\": \"Cleaned up yarn.lock dependency ranges\",\n-        \"description\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"level\": 0,\n-        \"childThemes\": [],\n-        \"affectedFiles\": [\n-          \"yarn.lock\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"businessImpact\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"codeSnippets\": [\n-          \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\"\n-        ],\n-        \"context\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"sourceThemes\": [\n-          \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\"\n-        ],\n-        \"consolidationMethod\": \"single\",\n-        \"detailedDescription\": \"Simplified version specifiers by removing duplicate or broader ranges\",\n-        \"technicalSummary\": \"Removed redundant version ranges from yarn.lock entries\",\n-        \"keyChanges\": [\n-          \"Removed ^7.0.0 || ^8.0.0 ranges from babel/core\",\n-          \"Removed ^29.0.0 || ^30.0.0 ranges from jest packages\",\n-          \"Removed >= 4.21.0 range from browserslist\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [],\n-        \"mainClassesChanged\": [],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        },\n-        \"isAtomic\": false\n-      }\n-    ],\n-    \"originalThemes\": [\n-      {\n-        \"id\": \"theme-2d11348c-cb2a-47d1-bac3-72a6c2490c4a\",\n-        \"name\": \"Simplify ACT environment output paths\",\n-        \"description\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"level\": 0,\n-        \"childIds\": [],\n-        \"affectedFiles\": [\n-          \"src/local-testing/services/output-saver.ts\"\n-        ],\n-        \"codeSnippets\": [\n-          \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"context\": \"Changed ACT output paths from /github/workspace/test-output to ./ and ./test-output\",\n-        \"enhancedContext\": {\n-          \"fileMetrics\": {\n-            \"totalFiles\": 1,\n-            \"fileTypes\": [\n-              \"ts\"\n-            ],\n-            \"hasTests\": false,\n-            \"hasConfig\": false,\n-            \"codeComplexity\": \"low\"\n-          },\n-          \"changePatterns\": {\n-            \"newFunctions\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"modifiedFunctions\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"newImports\": [],\n-            \"removedImports\": [],\n-            \"newClasses\": [\n-              \"OutputSaver\"\n-            ],\n-            \"modifiedClasses\": [\n-              \"OutputSaver\"\n-            ],\n-            \"architecturalPatterns\": [\n-              \"Singleton\"\n-            ],\n-            \"businessDomains\": [\n-              \"testing\"\n-            ]\n-          },\n-          \"contextSummary\": \"Simplified output directory paths and removed debug file copying for ACT environment\",\n-          \"significantChanges\": [\n-            \"Simplified output directory paths and removed debug file copying for ACT environment\"\n-          ]\n-        },\n-        \"codeChanges\": [\n-          {\n-            \"file\": \"src/local-testing/services/output-saver.ts\",\n-            \"diffHunk\": \"diff --git a/src/local-testing/services/output-saver.ts b/src/local-testing/services/output-saver.ts\\nindex 60b7d0d..75f0985 100644\\n--- a/src/local-testing/services/output-saver.ts\\n+++ b/src/local-testing/services/output-saver.ts\\n@@ -24,10 +24,10 @@ export interface SavedAnalysis {\\n  */\\n export class OutputSaver {\\n   private static readonly OUTPUT_DIR = process.env.ACT === 'true' \\n-    ? '/github/workspace/test-output'\\n+    ? './'\\n     : '.ai-code-review';\\n   private static readonly LOCAL_DIR = process.env.ACT === 'true'\\n-    ? '/github/workspace/test-output'\\n+    ? './test-output'\\n     : path.join(OutputSaver.OUTPUT_DIR, 'local-results');\\n \\n   /**\\n@@ -66,25 +66,6 @@ export class OutputSaver {\\n     console.log(`[OUTPUT-SAVER] Analysis saved to: ${filepath}`);\\n     console.log(`[OUTPUT-SAVER] File size: ${(jsonContent.length / 1024).toFixed(1)}KB`);\\n     \\n-    // Also save a copy to multiple locations for ACT debugging\\n-    if (process.env.ACT === 'true') {\\n-      // Try multiple potential mount points\\n-      const debugPaths = [\\n-        `/github/workspace/${filename}`,\\n-        `/tmp/${filename}`,\\n-        `/github/workspace/test-output/${filename}`,\\n-        `/var/tmp/${filename}`\\n-      ];\\n-      \\n-      for (const debugPath of debugPaths) {\\n-        try {\\n-          fs.writeFileSync(debugPath, jsonContent, 'utf8');\\n-          console.log(`[OUTPUT-SAVER] Debug copy saved to: ${debugPath}`);\\n-        } catch (error) {\\n-          // Try next path\\n-        }\\n-      }\\n-    }\\n \\n     return filepath;\\n   }\\n\",\n-            \"changeType\": \"modified\",\n-            \"functionsChanged\": [\n-              \"saveAnalysis\"\n-            ],\n-            \"classesChanged\": [\n-              \"OutputSaver\"\n-            ],\n-            \"importsChanged\": [],\n-            \"fileType\": \".ts\",\n-            \"isTestFile\": false,\n-            \"isConfigFile\": false,\n-            \"architecturalPatterns\": [\n-              \"Singleton\"\n-            ],\n-            \"businessDomain\": \"testing\",\n-            \"codeComplexity\": \"low\",\n-            \"semanticDescription\": \"Simplified output directory paths and removed debug file copying for ACT environment\"\n-          }\n-        ],\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"detailedDescription\": \"Removed debug path copying logic for ACT environments\",\n-        \"technicalSummary\": \"Updated OUTPUT_DIR and LOCAL_DIR path constants for ACT\",\n-        \"keyChanges\": [\n-          \"OUTPUT_DIR: '/github/workspace/test-output' → './'\",\n-          \"LOCAL_DIR: '/github/workspace/test-output' → './test-output'\",\n-          \"Removed debug path copying loop\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [\n-          \"saveAnalysis\"\n-        ],\n-        \"mainClassesChanged\": [\n-          \"OutputSaver\"\n-        ],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        }\n-      },\n-      {\n-        \"id\": \"theme-b22efaa9-130e-4193-86e5-37b19b6db80a\",\n-        \"name\": \"Cleaned up yarn.lock dependency ranges\",\n-        \"description\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"level\": 0,\n-        \"childIds\": [],\n-        \"affectedFiles\": [\n-          \"yarn.lock\"\n-        ],\n-        \"codeSnippets\": [\n-          \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\"\n-        ],\n-        \"confidence\": 0.9,\n-        \"context\": \"Removed redundant version ranges from multiple package entries in yarn.lock\",\n-        \"enhancedContext\": {\n-          \"fileMetrics\": {\n-            \"totalFiles\": 1,\n-            \"fileTypes\": [\n-              \"lock\"\n-            ],\n-            \"hasTests\": false,\n-            \"hasConfig\": true,\n-            \"codeComplexity\": \"low\"\n-          },\n-          \"changePatterns\": {\n-            \"newFunctions\": [],\n-            \"modifiedFunctions\": [],\n-            \"newImports\": [],\n-            \"removedImports\": [],\n-            \"newClasses\": [],\n-            \"modifiedClasses\": [],\n-            \"architecturalPatterns\": [],\n-            \"businessDomains\": [\n-              \"dependencies\"\n-            ]\n-          },\n-          \"contextSummary\": \"Cleaned up duplicate dependency version ranges in yarn.lock\",\n-          \"significantChanges\": [\n-            \"Cleaned up duplicate dependency version ranges in yarn.lock\"\n-          ]\n-        },\n-        \"codeChanges\": [\n-          {\n-            \"file\": \"yarn.lock\",\n-            \"diffHunk\": \"diff --git a/yarn.lock b/yarn.lock\\nindex c19175d..65be0c5 100644\\n--- a/yarn.lock\\n+++ b/yarn.lock\\n@@ -65,7 +65,7 @@\\n   resolved \\\"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz\\\"\\n   integrity sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==\\n \\n-\\\"@babel/core@^7.0.0\\\", \\\"@babel/core@^7.0.0-0\\\", \\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\", \\\"@babel/core@^7.8.0\\\", \\\"@babel/core@>=7.0.0-beta.0 <8\\\":\\n+\\\"@babel/core@^7.11.6\\\", \\\"@babel/core@^7.12.3\\\", \\\"@babel/core@^7.23.9\\\":\\n   version \\\"7.27.4\\\"\\n   resolved \\\"https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz\\\"\\n   integrity sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==\\n@@ -545,7 +545,7 @@\\n     jest-haste-map \\\"^29.7.0\\\"\\n     slash \\\"^3.0.0\\\"\\n \\n-\\\"@jest/transform@^29.0.0 || ^30.0.0\\\", \\\"@jest/transform@^29.7.0\\\":\\n+\\\"@jest/transform@^29.7.0\\\":\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\\\"\\n   integrity sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\\n@@ -566,7 +566,7 @@\\n     slash \\\"^3.0.0\\\"\\n     write-file-atomic \\\"^4.0.2\\\"\\n \\n-\\\"@jest/types@^29.0.0 || ^30.0.0\\\", \\\"@jest/types@^29.6.3\\\":\\n+\\\"@jest/types@^29.6.3\\\":\\n   version \\\"29.6.3\\\"\\n   resolved \\\"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\\\"\\n   integrity sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\\n@@ -618,7 +618,7 @@\\n     \\\"@nodelib/fs.stat\\\" \\\"2.0.5\\\"\\n     run-parallel \\\"^1.1.9\\\"\\n \\n-\\\"@nodelib/fs.stat@^2.0.2\\\", \\\"@nodelib/fs.stat@2.0.5\\\":\\n+\\\"@nodelib/fs.stat@2.0.5\\\", \\\"@nodelib/fs.stat@^2.0.2\\\":\\n   version \\\"2.0.5\\\"\\n   resolved \\\"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\\\"\\n   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\\n@@ -636,7 +636,7 @@\\n   resolved \\\"https://registry.npmjs.org/@octokit/auth-token/-/auth-token-4.0.0.tgz\\\"\\n   integrity sha512-tY/msAuJo6ARbK6SPIxZrPBms3xPbfwBrulZe0Wtr/DIY9lje2HeV1uoebShn6mx7SjCHif6EjMvoREj+gZ+SA==\\n \\n-\\\"@octokit/core@^5.0.1\\\", \\\"@octokit/core@5\\\":\\n+\\\"@octokit/core@^5.0.1\\\":\\n   version \\\"5.2.1\\\"\\n   resolved \\\"https://registry.npmjs.org/@octokit/core/-/core-5.2.1.tgz\\\"\\n   integrity sha512-dKYCMuPO1bmrpuogcjQ8z7ICCH3FP6WmxpwC03yjzGfZhj9fTJg6+bS1+UAplekbN2C+M61UNllGOOoAfGCrdQ==\\n@@ -872,7 +872,7 @@\\n     semver \\\"^7.5.4\\\"\\n     ts-api-utils \\\"^1.0.1\\\"\\n \\n-\\\"@typescript-eslint/parser@^6.0.0\\\", \\\"@typescript-eslint/parser@^6.0.0 || ^6.0.0-alpha\\\":\\n+\\\"@typescript-eslint/parser@^6.0.0\\\":\\n   version \\\"6.21.0\\\"\\n   resolved \\\"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-6.21.0.tgz\\\"\\n   integrity sha512-tbsV1jPne5CkFQCgPBcDOt30ItF7aJoZL997JSF7MhGQqOeT3svWRYxiqlfA5RUdlHN6Fi+EI9bxqbdyAUZjYQ==\\n@@ -956,7 +956,7 @@ acorn-jsx@^5.3.2:\\n   resolved \\\"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\\\"\\n   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\\n \\n-\\\"acorn@^6.0.0 || ^7.0.0 || ^8.0.0\\\", acorn@^8.9.0:\\n+acorn@^8.9.0:\\n   version \\\"8.15.0\\\"\\n   resolved \\\"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\\\"\\n   integrity sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\\n@@ -1025,7 +1025,7 @@ async@^3.2.3:\\n   resolved \\\"https://registry.npmjs.org/async/-/async-3.2.6.tgz\\\"\\n   integrity sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\\n \\n-\\\"babel-jest@^29.0.0 || ^30.0.0\\\", babel-jest@^29.7.0:\\n+babel-jest@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\\\"\\n   integrity sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\\n@@ -1120,7 +1120,7 @@ braces@^3.0.3:\\n   dependencies:\\n     fill-range \\\"^7.1.1\\\"\\n \\n-browserslist@^4.24.0, \\\"browserslist@>= 4.21.0\\\":\\n+browserslist@^4.24.0:\\n   version \\\"4.25.0\\\"\\n   resolved \\\"https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz\\\"\\n   integrity sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==\\n@@ -1355,7 +1355,7 @@ escape-string-regexp@^4.0.0:\\n   resolved \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\\\"\\n   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\\n \\n-eslint-config-prettier@^9.0.0, \\\"eslint-config-prettier@>= 7.0.0 <10.0.0 || >=10.1.0\\\":\\n+eslint-config-prettier@^9.0.0:\\n   version \\\"9.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\\\"\\n   integrity sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\\n@@ -1381,7 +1381,7 @@ eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:\\n   resolved \\\"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\\\"\\n   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\\n \\n-\\\"eslint@^6.0.0 || ^7.0.0 || >=8.0.0\\\", \\\"eslint@^7.0.0 || ^8.0.0\\\", eslint@^8.0.0, eslint@>=7.0.0, eslint@>=8.0.0:\\n+eslint@^8.0.0:\\n   version \\\"8.57.1\\\"\\n   resolved \\\"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\\\"\\n   integrity sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\\n@@ -1515,7 +1515,7 @@ fast-glob@^3.2.9:\\n     merge2 \\\"^1.3.0\\\"\\n     micromatch \\\"^4.0.8\\\"\\n \\n-fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0, fast-json-stable-stringify@2.x:\\n+fast-json-stable-stringify@2.x, fast-json-stable-stringify@^2.0.0, fast-json-stable-stringify@^2.1.0:\\n   version \\\"2.1.0\\\"\\n   resolved \\\"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\\\"\\n   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\\n@@ -2067,7 +2067,7 @@ jest-resolve-dependencies@^29.7.0:\\n     jest-regex-util \\\"^29.6.3\\\"\\n     jest-snapshot \\\"^29.7.0\\\"\\n \\n-jest-resolve@*, jest-resolve@^29.7.0:\\n+jest-resolve@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\\\"\\n   integrity sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\\n@@ -2163,7 +2163,7 @@ jest-snapshot@^29.7.0:\\n     pretty-format \\\"^29.7.0\\\"\\n     semver \\\"^7.5.3\\\"\\n \\n-\\\"jest-util@^29.0.0 || ^30.0.0\\\", jest-util@^29.7.0:\\n+jest-util@^29.7.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\\\"\\n   integrity sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\\n@@ -2211,7 +2211,7 @@ jest-worker@^29.7.0:\\n     merge-stream \\\"^2.0.0\\\"\\n     supports-color \\\"^8.0.0\\\"\\n \\n-jest@^29.0.0, \\\"jest@^29.0.0 || ^30.0.0\\\":\\n+jest@^29.0.0:\\n   version \\\"29.7.0\\\"\\n   resolved \\\"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\\\"\\n   integrity sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\\n@@ -2374,6 +2374,13 @@ mimic-fn@^2.1.0:\\n   resolved \\\"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\\\"\\n   integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\\n \\n+minimatch@9.0.3:\\n+  version \\\"9.0.3\\\"\\n+  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n+  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n+  dependencies:\\n+    brace-expansion \\\"^2.0.1\\\"\\n+\\n minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.1, minimatch@^3.1.2:\\n   version \\\"3.1.2\\\"\\n   resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\\\"\\n@@ -2388,13 +2395,6 @@ minimatch@^5.0.1:\\n   dependencies:\\n     brace-expansion \\\"^2.0.1\\\"\\n \\n-minimatch@9.0.3:\\n-  version \\\"9.0.3\\\"\\n-  resolved \\\"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\\\"\\n-  integrity sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\\n-  dependencies:\\n-    brace-expansion \\\"^2.0.1\\\"\\n-\\n ms@^2.1.3:\\n   version \\\"2.1.3\\\"\\n   resolved \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\"\\n@@ -2562,7 +2562,7 @@ prettier-linter-helpers@^1.0.0:\\n   dependencies:\\n     fast-diff \\\"^1.1.2\\\"\\n \\n-prettier@^3.0.0, prettier@>=3.0.0:\\n+prettier@^3.0.0:\\n   version \\\"3.5.3\\\"\\n   resolved \\\"https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz\\\"\\n   integrity sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==\\n@@ -2659,12 +2659,7 @@ run-parallel@^1.1.9:\\n   dependencies:\\n     queue-microtask \\\"^1.2.2\\\"\\n \\n-semver@^6.3.0:\\n-  version \\\"6.3.1\\\"\\n-  resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n-\\n-semver@^6.3.1:\\n+semver@^6.3.0, semver@^6.3.1:\\n   version \\\"6.3.1\\\"\\n   resolved \\\"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\\\"\\n   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\\n@@ -2869,7 +2864,7 @@ type-fest@^4.41.0:\\n   resolved \\\"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\\\"\\n   integrity sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\\n \\n-typescript@^5.0.0, typescript@>=4.2.0, \\\"typescript@>=4.3 <6\\\":\\n+typescript@^5.0.0:\\n   version \\\"5.8.3\\\"\\n   resolved \\\"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\\\"\\n   integrity sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\\n@@ -2879,11 +2874,6 @@ undici-types@~6.21.0:\\n   resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\\\"\\n   integrity sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\\n \\n-undici-types@~7.8.0:\\n-  version \\\"7.8.0\\\"\\n-  resolved \\\"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\\\"\\n-  integrity sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\\n-\\n undici@^5.25.4, undici@^5.28.5:\\n   version \\\"5.29.0\\\"\\n   resolved \\\"https://registry.npmjs.org/undici/-/undici-5.29.0.tgz\\\"\\n\",\n-            \"changeType\": \"modified\",\n-            \"functionsChanged\": [],\n-            \"classesChanged\": [],\n-            \"importsChanged\": [],\n-            \"fileType\": \".lock\",\n-            \"isTestFile\": false,\n-            \"isConfigFile\": true,\n-            \"architecturalPatterns\": [],\n-            \"businessDomain\": \"dependencies\",\n-            \"codeComplexity\": \"low\",\n-            \"semanticDescription\": \"Cleaned up duplicate dependency version ranges in yarn.lock\"\n-          }\n-        ],\n-        \"lastAnalysis\": \"2025-07-06T09:17:18.325Z\",\n-        \"detailedDescription\": \"Simplified version specifiers by removing duplicate or broader ranges\",\n-        \"technicalSummary\": \"Removed redundant version ranges from yarn.lock entries\",\n-        \"keyChanges\": [\n-          \"Removed ^7.0.0 || ^8.0.0 ranges from babel/core\",\n-          \"Removed ^29.0.0 || ^30.0.0 ranges from jest packages\",\n-          \"Removed >= 4.21.0 range from browserslist\"\n-        ],\n-        \"userScenario\": null,\n-        \"mainFunctionsChanged\": [],\n-        \"mainClassesChanged\": [],\n-        \"codeMetrics\": {\n-          \"filesChanged\": 1\n-        }\n-      }\n-    ],\n-    \"summary\": \"Discovered 2 consolidated themes: Simplify ACT environment output paths, Cleaned up yarn.lock dependency ranges\",\n-    \"changedFilesCount\": 2,\n-    \"analysisTimestamp\": \"2025-07-06T09:17:05.383Z\",\n-    \"totalThemes\": 2,\n-    \"originalThemeCount\": 2,\n-    \"processingTime\": 52750,\n-    \"consolidationTime\": 14041,\n-    \"expandable\": {\n-      \"hasChildThemes\": false,\n-      \"canDrillDown\": true\n-    },\n-    \"consolidationStats\": {\n-      \"mergedThemes\": 0,\n-      \"hierarchicalThemes\": 0,\n-      \"consolidationRatio\": 0\n-    },\n-    \"expansionTime\": 19377,\n-    \"expansionStats\": {\n-      \"expandedThemes\": 0,\n-      \"maxDepth\": 0,\n-      \"averageDepth\": 0,\n-      \"totalSubThemes\": 0\n-    }\n-  }\n-}\n\\ No newline at end of file\n",
            "changeType": "deleted",
            "functionsChanged": [],
            "classesChanged": [],
            "importsChanged": [],
            "fileType": ".json",
            "isTestFile": false,
            "isConfigFile": false,
            "architecturalPatterns": [],
            "businessDomain": "analysis",
            "codeComplexity": "low",
            "semanticDescription": "Deleted analysis output file containing code review results"
          }
        ],
        "lastAnalysis": "2025-07-06T09:27:42.445Z",
        "detailedDescription": "Cleaned up temporary analysis output from code review process",
        "technicalSummary": "Deleted JSON file with 282 lines of analysis metadata",
        "keyChanges": [
          "Removed analysis-2025-07-06T09-17-51-794Z.json file",
          "Deleted ACT environment theme analysis",
          "Removed yarn.lock cleanup theme data"
        ],
        "userScenario": null,
        "mainFunctionsChanged": [],
        "mainClassesChanged": [],
        "codeMetrics": {
          "filesChanged": 1
        }
      }
    ],
    "summary": "Discovered 2 consolidated themes (consolidated from 7 original themes): Clean up debug output, Deleted test output analysis file",
    "changedFilesCount": 7,
    "analysisTimestamp": "2025-07-06T09:27:22.551Z",
    "totalThemes": 2,
    "originalThemeCount": 7,
    "processingTime": 627578,
    "consolidationTime": 360621,
    "expandable": {
      "hasChildThemes": true,
      "canDrillDown": true
    },
    "consolidationStats": {
      "mergedThemes": 1,
      "hierarchicalThemes": 1,
      "consolidationRatio": 0.7142857142857143
    },
    "expansionTime": 231126,
    "expansionStats": {
      "expandedThemes": 40,
      "maxDepth": 4,
      "averageDepth": 2.731707317073171,
      "totalSubThemes": 39
    }
  }
}